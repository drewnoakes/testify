### YamlMime:XRefMap
sorted: true
references:
- uid: AntiPatterns
  name: Anti-Patterns
  href: manual/AntiPatterns.html
- uid: Api
  name: Api Documentation
  href: api/index.html
- uid: Assertions
  name: Assertions
  href: manual/Assertions.html
- uid: BestPractices
  name: Best Practices
  href: manual/BestPractices.html
- uid: ContractVerifiers
  name: Contract Verifiers
  href: manual/ContractVerifiers.html
- uid: GoodUnitTests
  name: Good Unit Tests
  href: manual/GoodUnitTests.html
- uid: Home
  name: Testify
  href: index.html
- uid: Intro
  name: Intro
  href: manual/intro.html
- uid: Testify
  name: Testify
  href: api/Testify.html
  commentId: N:Testify
  fullName: Testify
  nameWithType: Testify
- uid: Testify.ActualValue`1
  name: ActualValue<T>
  href: api/Testify.ActualValue-1.html
  commentId: T:Testify.ActualValue`1
  name.vb: ActualValue(Of T)
  fullName: Testify.ActualValue<T>
  fullName.vb: Testify.ActualValue(Of T)
  nameWithType: ActualValue<T>
  nameWithType.vb: ActualValue(Of T)
- uid: Testify.ActualValue`1.#ctor(`0)
  name: ActualValue(T)
  href: api/Testify.ActualValue-1.html
  commentId: M:Testify.ActualValue`1.#ctor(`0)
  fullName: Testify.ActualValue<T>.ActualValue(T)
  fullName.vb: Testify.ActualValue(Of T).ActualValue(T)
  nameWithType: ActualValue<T>.ActualValue(T)
- uid: Testify.ActualValue`1.#ctor*
  name: ActualValue
  href: api/Testify.ActualValue-1.html
  commentId: Overload:Testify.ActualValue`1.#ctor
  fullName: Testify.ActualValue.ActualValue
  nameWithType: ActualValue.ActualValue
- uid: Testify.ActualValue`1.Value
  name: Value
  href: api/Testify.ActualValue-1.html
  commentId: P:Testify.ActualValue`1.Value
  fullName: Testify.ActualValue<T>.Value
  fullName.vb: Testify.ActualValue(Of T).Value
  nameWithType: ActualValue<T>.Value
- uid: Testify.ActualValue`1.Value*
  name: Value
  href: api/Testify.ActualValue-1.html
  commentId: Overload:Testify.ActualValue`1.Value
  fullName: Testify.ActualValue<T>.Value
  fullName.vb: Testify.ActualValue(Of T).Value
  nameWithType: ActualValue<T>.Value
  nameWithType.vb: ActualValue(Of T).Value
- uid: Testify.AnonymousBool
  name: AnonymousBool
  href: api/Testify.AnonymousBool.html
  commentId: T:Testify.AnonymousBool
  fullName: Testify.AnonymousBool
  nameWithType: AnonymousBool
- uid: Testify.AnonymousBool.AnyBool(Testify.IAnonymousData)
  name: AnyBool(IAnonymousData)
  href: api/Testify.AnonymousBool.html
  commentId: M:Testify.AnonymousBool.AnyBool(Testify.IAnonymousData)
  fullName: Testify.AnonymousBool.AnyBool(Testify.IAnonymousData)
  nameWithType: AnonymousBool.AnyBool(IAnonymousData)
- uid: Testify.AnonymousBool.AnyBool(Testify.IAnonymousData,Testify.Distribution)
  name: AnyBool(IAnonymousData, Distribution)
  href: api/Testify.AnonymousBool.html
  commentId: M:Testify.AnonymousBool.AnyBool(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousBool.AnyBool(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousBool.AnyBool(IAnonymousData, Distribution)
- uid: Testify.AnonymousBool.AnyBool*
  name: AnyBool
  href: api/Testify.AnonymousBool.html
  commentId: Overload:Testify.AnonymousBool.AnyBool
  fullName: Testify.AnonymousBool.AnyBool
  nameWithType: AnonymousBool.AnyBool
- uid: Testify.AnonymousByte
  name: AnonymousByte
  href: api/Testify.AnonymousByte.html
  commentId: T:Testify.AnonymousByte
  fullName: Testify.AnonymousByte
  nameWithType: AnonymousByte
- uid: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData)
  name: AnyByte(IAnonymousData)
  href: api/Testify.AnonymousByte.html
  commentId: M:Testify.AnonymousByte.AnyByte(Testify.IAnonymousData)
  fullName: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData)
  nameWithType: AnonymousByte.AnyByte(IAnonymousData)
- uid: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,System.Byte,System.Byte)
  name: AnyByte(IAnonymousData, Byte, Byte)
  href: api/Testify.AnonymousByte.html
  commentId: M:Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,System.Byte,System.Byte)
  fullName: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData, System.Byte, System.Byte)
  nameWithType: AnonymousByte.AnyByte(IAnonymousData, Byte, Byte)
- uid: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,System.Byte,System.Byte,Testify.Distribution)
  name: AnyByte(IAnonymousData, Byte, Byte, Distribution)
  href: api/Testify.AnonymousByte.html
  commentId: M:Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,System.Byte,System.Byte,Testify.Distribution)
  fullName: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData, System.Byte, System.Byte, Testify.Distribution)
  nameWithType: AnonymousByte.AnyByte(IAnonymousData, Byte, Byte, Distribution)
- uid: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,Testify.Distribution)
  name: AnyByte(IAnonymousData, Distribution)
  href: api/Testify.AnonymousByte.html
  commentId: M:Testify.AnonymousByte.AnyByte(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousByte.AnyByte(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousByte.AnyByte(IAnonymousData, Distribution)
- uid: Testify.AnonymousByte.AnyByte*
  name: AnyByte
  href: api/Testify.AnonymousByte.html
  commentId: Overload:Testify.AnonymousByte.AnyByte
  fullName: Testify.AnonymousByte.AnyByte
  nameWithType: AnonymousByte.AnyByte
- uid: Testify.AnonymousChar
  name: AnonymousChar
  href: api/Testify.AnonymousChar.html
  commentId: T:Testify.AnonymousChar
  fullName: Testify.AnonymousChar
  nameWithType: AnonymousChar
- uid: Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData)
  name: AnyAlphaChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyAlphaChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyAlphaChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyAlphaChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyAlphaChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyAlphaChar*
  name: AnyAlphaChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyAlphaChar
  fullName: Testify.AnonymousChar.AnyAlphaChar
  nameWithType: AnonymousChar.AnyAlphaChar
- uid: Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData)
  name: AnyAlphaNumericChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyAlphaNumericChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyAlphaNumericChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyAlphaNumericChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyAlphaNumericChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyAlphaNumericChar*
  name: AnyAlphaNumericChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyAlphaNumericChar
  fullName: Testify.AnonymousChar.AnyAlphaNumericChar
  nameWithType: AnonymousChar.AnyAlphaNumericChar
- uid: Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData)
  name: AnyBasicLatinChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyBasicLatinChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyBasicLatinChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyBasicLatinChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyBasicLatinChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyBasicLatinChar*
  name: AnyBasicLatinChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyBasicLatinChar
  fullName: Testify.AnonymousChar.AnyBasicLatinChar
  nameWithType: AnonymousChar.AnyBasicLatinChar
- uid: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData)
  name: AnyChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,System.Char,System.Char)
  name: AnyChar(IAnonymousData, Char, Char)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,System.Char,System.Char)
  fullName: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData, System.Char, System.Char)
  nameWithType: AnonymousChar.AnyChar(IAnonymousData, Char, Char)
- uid: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,System.Char,System.Char,Testify.Distribution)
  name: AnyChar(IAnonymousData, Char, Char, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,System.Char,System.Char,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData, System.Char, System.Char, Testify.Distribution)
  nameWithType: AnonymousChar.AnyChar(IAnonymousData, Char, Char, Distribution)
- uid: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyChar*
  name: AnyChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyChar
  fullName: Testify.AnonymousChar.AnyChar
  nameWithType: AnonymousChar.AnyChar
- uid: Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData)
  name: AnyLatinSupplementChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyLatinSupplementChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyLatinSupplementChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyLatinSupplementChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyLatinSupplementChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyLatinSupplementChar*
  name: AnyLatinSupplementChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyLatinSupplementChar
  fullName: Testify.AnonymousChar.AnyLatinSupplementChar
  nameWithType: AnonymousChar.AnyLatinSupplementChar
- uid: Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData)
  name: AnyNumericChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyNumericChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNumericChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyNumericChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyNumericChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyNumericChar*
  name: AnyNumericChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyNumericChar
  fullName: Testify.AnonymousChar.AnyNumericChar
  nameWithType: AnonymousChar.AnyNumericChar
- uid: Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData)
  name: AnyPrintableChar(IAnonymousData)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData)
  fullName: Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData)
  nameWithType: AnonymousChar.AnyPrintableChar(IAnonymousData)
- uid: Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPrintableChar(IAnonymousData, Distribution)
  href: api/Testify.AnonymousChar.html
  commentId: M:Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousChar.AnyPrintableChar(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousChar.AnyPrintableChar(IAnonymousData, Distribution)
- uid: Testify.AnonymousChar.AnyPrintableChar*
  name: AnyPrintableChar
  href: api/Testify.AnonymousChar.html
  commentId: Overload:Testify.AnonymousChar.AnyPrintableChar
  fullName: Testify.AnonymousChar.AnyPrintableChar
  nameWithType: AnonymousChar.AnyPrintableChar
- uid: Testify.AnonymousData
  name: AnonymousData
  href: api/Testify.AnonymousData.html
  commentId: T:Testify.AnonymousData
  fullName: Testify.AnonymousData
  nameWithType: AnonymousData
- uid: Testify.AnonymousData.#ctor
  name: AnonymousData()
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.#ctor
  fullName: Testify.AnonymousData.AnonymousData()
  nameWithType: AnonymousData.AnonymousData()
- uid: Testify.AnonymousData.#ctor(System.Int32)
  name: AnonymousData(Int32)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.#ctor(System.Int32)
  fullName: Testify.AnonymousData.AnonymousData(System.Int32)
  nameWithType: AnonymousData.AnonymousData(Int32)
- uid: Testify.AnonymousData.#ctor*
  name: AnonymousData
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.#ctor
  fullName: Testify.AnonymousData.AnonymousData
  nameWithType: AnonymousData.AnonymousData
- uid: Testify.AnonymousData.Any(System.Type,Testify.PopulateOption)
  name: Any(Type, PopulateOption)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.Any(System.Type,Testify.PopulateOption)
  fullName: Testify.AnonymousData.Any(System.Type, Testify.PopulateOption)
  nameWithType: AnonymousData.Any(Type, PopulateOption)
- uid: Testify.AnonymousData.Any*
  name: Any
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.Any
  fullName: Testify.AnonymousData.Any
  nameWithType: AnonymousData.Any
- uid: Testify.AnonymousData.AnyDouble(System.Double,System.Double,Testify.Distribution)
  name: AnyDouble(Double, Double, Distribution)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.AnyDouble(System.Double,System.Double,Testify.Distribution)
  fullName: Testify.AnonymousData.AnyDouble(System.Double, System.Double, Testify.Distribution)
  nameWithType: AnonymousData.AnyDouble(Double, Double, Distribution)
- uid: Testify.AnonymousData.AnyDouble*
  name: AnyDouble
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.AnyDouble
  fullName: Testify.AnonymousData.AnyDouble
  nameWithType: AnonymousData.AnyDouble
- uid: Testify.AnonymousData.Customize(Testify.IAnonymousDataCustomization)
  name: Customize(IAnonymousDataCustomization)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.Customize(Testify.IAnonymousDataCustomization)
  fullName: Testify.AnonymousData.Customize(Testify.IAnonymousDataCustomization)
  nameWithType: AnonymousData.Customize(IAnonymousDataCustomization)
- uid: Testify.AnonymousData.Customize*
  name: Customize
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.Customize
  fullName: Testify.AnonymousData.Customize
  nameWithType: AnonymousData.Customize
- uid: Testify.AnonymousData.Populate*
  name: Populate<TInstance>
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.Populate
  name.vb: Populate(Of TInstance)
  fullName: Testify.AnonymousData.Populate<TInstance>
  fullName.vb: Testify.AnonymousData.Populate(Of TInstance)
  nameWithType: AnonymousData.Populate<TInstance>
  nameWithType.vb: AnonymousData.Populate(Of TInstance)
- uid: Testify.AnonymousData.Populate``1(``0,System.Boolean)
  name: Populate<TInstance>(TInstance, Boolean)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.Populate``1(``0,System.Boolean)
  name.vb: Populate(Of TInstance)(TInstance, Boolean)
  fullName: Testify.AnonymousData.Populate<TInstance>(TInstance, System.Boolean)
  fullName.vb: Testify.AnonymousData.Populate(Of TInstance)(TInstance, System.Boolean)
  nameWithType: AnonymousData.Populate<TInstance>(TInstance, Boolean)
  nameWithType.vb: Populate(Of TInstance)(TInstance, Boolean)
- uid: Testify.AnonymousData.Register(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name: Register(PropertyInfo, Func<IAnonymousData, Object>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.Register(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: Register(PropertyInfo, Func(Of IAnonymousData, Object))
  fullName: Testify.AnonymousData.Register(System.Reflection.PropertyInfo, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.AnonymousData.Register(System.Reflection.PropertyInfo, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: AnonymousData.Register(PropertyInfo, Func<IAnonymousData, Object>)
  nameWithType.vb: Register(PropertyInfo, Func(Of IAnonymousData, Object))
- uid: Testify.AnonymousData.Register(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name: Register(Type, Func<IAnonymousData, Object>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.Register(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: Register(Type, Func(Of IAnonymousData, Object))
  fullName: Testify.AnonymousData.Register(System.Type, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.AnonymousData.Register(System.Type, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: AnonymousData.Register(Type, Func<IAnonymousData, Object>)
  nameWithType.vb: Register(Type, Func(Of IAnonymousData, Object))
- uid: Testify.AnonymousData.Register*
  name: Register
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.Register
  fullName: Testify.AnonymousData.Register
  nameWithType: AnonymousData.Register
- uid: Testify.AnonymousData.RegisterDefault(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name: RegisterDefault(PropertyInfo, Func<IAnonymousData, Object>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.RegisterDefault(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: RegisterDefault(PropertyInfo, Func(Of IAnonymousData, Object))
  fullName: Testify.AnonymousData.RegisterDefault(System.Reflection.PropertyInfo, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.AnonymousData.RegisterDefault(System.Reflection.PropertyInfo, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: AnonymousData.RegisterDefault(PropertyInfo, Func<IAnonymousData, Object>)
  nameWithType.vb: RegisterDefault(PropertyInfo, Func(Of IAnonymousData, Object))
- uid: Testify.AnonymousData.RegisterDefault(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name: RegisterDefault(Type, Func<IAnonymousData, Object>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.RegisterDefault(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: RegisterDefault(Type, Func(Of IAnonymousData, Object))
  fullName: Testify.AnonymousData.RegisterDefault(System.Type, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.AnonymousData.RegisterDefault(System.Type, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: AnonymousData.RegisterDefault(Type, Func<IAnonymousData, Object>)
  nameWithType.vb: RegisterDefault(Type, Func(Of IAnonymousData, Object))
- uid: Testify.AnonymousData.RegisterDefault*
  name: RegisterDefault
  href: api/Testify.AnonymousData.html
  commentId: Overload:Testify.AnonymousData.RegisterDefault
  fullName: Testify.AnonymousData.RegisterDefault
  nameWithType: AnonymousData.RegisterDefault
- uid: Testify.AnonymousData.RegisterDefault``1(System.Func{Testify.IAnonymousData,``0})
  name: RegisterDefault<T>(Func<IAnonymousData, T>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.RegisterDefault``1(System.Func{Testify.IAnonymousData,``0})
  name.vb: RegisterDefault(Of T)(Func(Of IAnonymousData, T))
  fullName: Testify.AnonymousData.RegisterDefault<T>(System.Func<Testify.IAnonymousData, T>)
  fullName.vb: Testify.AnonymousData.RegisterDefault(Of T)(System.Func(Of Testify.IAnonymousData, T))
  nameWithType: AnonymousData.RegisterDefault<T>(Func<IAnonymousData, T>)
  nameWithType.vb: RegisterDefault(Of T)(Func(Of IAnonymousData, T))
- uid: Testify.AnonymousData.RegisterDefault``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{Testify.IAnonymousData,``1})
  name: RegisterDefault<T, TProperty>(Expression<Func<T, TProperty>>, Func<IAnonymousData, TProperty>)
  href: api/Testify.AnonymousData.html
  commentId: M:Testify.AnonymousData.RegisterDefault``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{Testify.IAnonymousData,``1})
  name.vb: RegisterDefault(Of T, TProperty)(Expression(Of Func(Of T, TProperty)), Func(Of IAnonymousData, TProperty))
  fullName: Testify.AnonymousData.RegisterDefault<T, TProperty>(System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<Testify.IAnonymousData, TProperty>)
  fullName.vb: Testify.AnonymousData.RegisterDefault(Of T, TProperty)(System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of Testify.IAnonymousData, TProperty))
  nameWithType: AnonymousData.RegisterDefault<T, TProperty>(Expression<Func<T, TProperty>>, Func<IAnonymousData, TProperty>)
  nameWithType.vb: RegisterDefault(Of T, TProperty)(Expression(Of Func(Of T, TProperty)), Func(Of IAnonymousData, TProperty))
- uid: Testify.AnonymousDataException
  name: AnonymousDataException
  href: api/Testify.AnonymousDataException.html
  commentId: T:Testify.AnonymousDataException
  fullName: Testify.AnonymousDataException
  nameWithType: AnonymousDataException
- uid: Testify.AnonymousDataException.#ctor(System.Reflection.PropertyInfo)
  name: AnonymousDataException(PropertyInfo)
  href: api/Testify.AnonymousDataException.html
  commentId: M:Testify.AnonymousDataException.#ctor(System.Reflection.PropertyInfo)
  fullName: Testify.AnonymousDataException.AnonymousDataException(System.Reflection.PropertyInfo)
  nameWithType: AnonymousDataException.AnonymousDataException(PropertyInfo)
- uid: Testify.AnonymousDataException.#ctor(System.Reflection.PropertyInfo,System.Exception)
  name: AnonymousDataException(PropertyInfo, Exception)
  href: api/Testify.AnonymousDataException.html
  commentId: M:Testify.AnonymousDataException.#ctor(System.Reflection.PropertyInfo,System.Exception)
  fullName: Testify.AnonymousDataException.AnonymousDataException(System.Reflection.PropertyInfo, System.Exception)
  nameWithType: AnonymousDataException.AnonymousDataException(PropertyInfo, Exception)
- uid: Testify.AnonymousDataException.#ctor(System.Type)
  name: AnonymousDataException(Type)
  href: api/Testify.AnonymousDataException.html
  commentId: M:Testify.AnonymousDataException.#ctor(System.Type)
  fullName: Testify.AnonymousDataException.AnonymousDataException(System.Type)
  nameWithType: AnonymousDataException.AnonymousDataException(Type)
- uid: Testify.AnonymousDataException.#ctor(System.Type,System.Exception)
  name: AnonymousDataException(Type, Exception)
  href: api/Testify.AnonymousDataException.html
  commentId: M:Testify.AnonymousDataException.#ctor(System.Type,System.Exception)
  fullName: Testify.AnonymousDataException.AnonymousDataException(System.Type, System.Exception)
  nameWithType: AnonymousDataException.AnonymousDataException(Type, Exception)
- uid: Testify.AnonymousDataException.#ctor*
  name: AnonymousDataException
  href: api/Testify.AnonymousDataException.html
  commentId: Overload:Testify.AnonymousDataException.#ctor
  fullName: Testify.AnonymousDataException.AnonymousDataException
  nameWithType: AnonymousDataException.AnonymousDataException
- uid: Testify.AnonymousDataException.AnonymousType
  name: AnonymousType
  href: api/Testify.AnonymousDataException.html
  commentId: P:Testify.AnonymousDataException.AnonymousType
  fullName: Testify.AnonymousDataException.AnonymousType
  nameWithType: AnonymousDataException.AnonymousType
- uid: Testify.AnonymousDataException.AnonymousType*
  name: AnonymousType
  href: api/Testify.AnonymousDataException.html
  commentId: Overload:Testify.AnonymousDataException.AnonymousType
  fullName: Testify.AnonymousDataException.AnonymousType
  nameWithType: AnonymousDataException.AnonymousType
- uid: Testify.AnonymousDataExtensions
  name: AnonymousDataExtensions
  href: api/Testify.AnonymousDataExtensions.html
  commentId: T:Testify.AnonymousDataExtensions
  fullName: Testify.AnonymousDataExtensions
  nameWithType: AnonymousDataExtensions
- uid: Testify.AnonymousDataExtensions.Any(Testify.IAnonymousData,System.Type)
  name: Any(IAnonymousData, Type)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Any(Testify.IAnonymousData,System.Type)
  fullName: Testify.AnonymousDataExtensions.Any(Testify.IAnonymousData, System.Type)
  nameWithType: AnonymousDataExtensions.Any(IAnonymousData, Type)
- uid: Testify.AnonymousDataExtensions.Any*
  name: Any<T>
  href: api/Testify.AnonymousDataExtensions.html
  commentId: Overload:Testify.AnonymousDataExtensions.Any
  name.vb: Any(Of T)
  fullName: Testify.AnonymousDataExtensions.Any<T>
  fullName.vb: Testify.AnonymousDataExtensions.Any(Of T)
  nameWithType: AnonymousDataExtensions.Any<T>
  nameWithType.vb: AnonymousDataExtensions.Any(Of T)
- uid: Testify.AnonymousDataExtensions.Any``1(Testify.IAnonymousData)
  name: Any<T>(IAnonymousData)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Any``1(Testify.IAnonymousData)
  name.vb: Any(Of T)(IAnonymousData)
  fullName: Testify.AnonymousDataExtensions.Any<T>(Testify.IAnonymousData)
  fullName.vb: Testify.AnonymousDataExtensions.Any(Of T)(Testify.IAnonymousData)
  nameWithType: AnonymousDataExtensions.Any<T>(IAnonymousData)
  nameWithType.vb: Any(Of T)(IAnonymousData)
- uid: Testify.AnonymousDataExtensions.Any``1(Testify.IAnonymousData,Testify.PopulateOption)
  name: Any<T>(IAnonymousData, PopulateOption)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Any``1(Testify.IAnonymousData,Testify.PopulateOption)
  name.vb: Any(Of T)(IAnonymousData, PopulateOption)
  fullName: Testify.AnonymousDataExtensions.Any<T>(Testify.IAnonymousData, Testify.PopulateOption)
  fullName.vb: Testify.AnonymousDataExtensions.Any(Of T)(Testify.IAnonymousData, Testify.PopulateOption)
  nameWithType: AnonymousDataExtensions.Any<T>(IAnonymousData, PopulateOption)
  nameWithType.vb: Any(Of T)(IAnonymousData, PopulateOption)
- uid: Testify.AnonymousDataExtensions.Freeze(Testify.IRegisterAnonymousData,System.Type,System.Object)
  name: Freeze(IRegisterAnonymousData, Type, Object)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Freeze(Testify.IRegisterAnonymousData,System.Type,System.Object)
  fullName: Testify.AnonymousDataExtensions.Freeze(Testify.IRegisterAnonymousData, System.Type, System.Object)
  nameWithType: AnonymousDataExtensions.Freeze(IRegisterAnonymousData, Type, Object)
- uid: Testify.AnonymousDataExtensions.Freeze*
  name: Freeze
  href: api/Testify.AnonymousDataExtensions.html
  commentId: Overload:Testify.AnonymousDataExtensions.Freeze
  fullName: Testify.AnonymousDataExtensions.Freeze
  nameWithType: AnonymousDataExtensions.Freeze
- uid: Testify.AnonymousDataExtensions.Freeze``1(Testify.IRegisterAnonymousData,``0)
  name: Freeze<T>(IRegisterAnonymousData, T)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Freeze``1(Testify.IRegisterAnonymousData,``0)
  name.vb: Freeze(Of T)(IRegisterAnonymousData, T)
  fullName: Testify.AnonymousDataExtensions.Freeze<T>(Testify.IRegisterAnonymousData, T)
  fullName.vb: Testify.AnonymousDataExtensions.Freeze(Of T)(Testify.IRegisterAnonymousData, T)
  nameWithType: AnonymousDataExtensions.Freeze<T>(IRegisterAnonymousData, T)
  nameWithType.vb: Freeze(Of T)(IRegisterAnonymousData, T)
- uid: Testify.AnonymousDataExtensions.Populate*
  name: Populate<TInstance>
  href: api/Testify.AnonymousDataExtensions.html
  commentId: Overload:Testify.AnonymousDataExtensions.Populate
  name.vb: Populate(Of TInstance)
  fullName: Testify.AnonymousDataExtensions.Populate<TInstance>
  fullName.vb: Testify.AnonymousDataExtensions.Populate(Of TInstance)
  nameWithType: AnonymousDataExtensions.Populate<TInstance>
  nameWithType.vb: AnonymousDataExtensions.Populate(Of TInstance)
- uid: Testify.AnonymousDataExtensions.Populate``1(Testify.IAnonymousData,``0)
  name: Populate<TInstance>(IAnonymousData, TInstance)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Populate``1(Testify.IAnonymousData,``0)
  name.vb: Populate(Of TInstance)(IAnonymousData, TInstance)
  fullName: Testify.AnonymousDataExtensions.Populate<TInstance>(Testify.IAnonymousData, TInstance)
  fullName.vb: Testify.AnonymousDataExtensions.Populate(Of TInstance)(Testify.IAnonymousData, TInstance)
  nameWithType: AnonymousDataExtensions.Populate<TInstance>(IAnonymousData, TInstance)
  nameWithType.vb: Populate(Of TInstance)(IAnonymousData, TInstance)
- uid: Testify.AnonymousDataExtensions.Register*
  name: Register<T>
  href: api/Testify.AnonymousDataExtensions.html
  commentId: Overload:Testify.AnonymousDataExtensions.Register
  name.vb: Register(Of T)
  fullName: Testify.AnonymousDataExtensions.Register<T>
  fullName.vb: Testify.AnonymousDataExtensions.Register(Of T)
  nameWithType: AnonymousDataExtensions.Register<T>
  nameWithType.vb: AnonymousDataExtensions.Register(Of T)
- uid: Testify.AnonymousDataExtensions.Register``1(Testify.IRegisterAnonymousData,System.Func{Testify.IAnonymousData,``0})
  name: Register<T>(IRegisterAnonymousData, Func<IAnonymousData, T>)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Register``1(Testify.IRegisterAnonymousData,System.Func{Testify.IAnonymousData,``0})
  name.vb: Register(Of T)(IRegisterAnonymousData, Func(Of IAnonymousData, T))
  fullName: Testify.AnonymousDataExtensions.Register<T>(Testify.IRegisterAnonymousData, System.Func<Testify.IAnonymousData, T>)
  fullName.vb: Testify.AnonymousDataExtensions.Register(Of T)(Testify.IRegisterAnonymousData, System.Func(Of Testify.IAnonymousData, T))
  nameWithType: AnonymousDataExtensions.Register<T>(IRegisterAnonymousData, Func<IAnonymousData, T>)
  nameWithType.vb: Register(Of T)(IRegisterAnonymousData, Func(Of IAnonymousData, T))
- uid: Testify.AnonymousDataExtensions.Register``2(Testify.IRegisterAnonymousData,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{Testify.IAnonymousData,``1})
  name: Register<T, TProperty>(IRegisterAnonymousData, Expression<Func<T, TProperty>>, Func<IAnonymousData, TProperty>)
  href: api/Testify.AnonymousDataExtensions.html
  commentId: M:Testify.AnonymousDataExtensions.Register``2(Testify.IRegisterAnonymousData,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Func{Testify.IAnonymousData,``1})
  name.vb: Register(Of T, TProperty)(IRegisterAnonymousData, Expression(Of Func(Of T, TProperty)), Func(Of IAnonymousData, TProperty))
  fullName: Testify.AnonymousDataExtensions.Register<T, TProperty>(Testify.IRegisterAnonymousData, System.Linq.Expressions.Expression<System.Func<T, TProperty>>, System.Func<Testify.IAnonymousData, TProperty>)
  fullName.vb: Testify.AnonymousDataExtensions.Register(Of T, TProperty)(Testify.IRegisterAnonymousData, System.Linq.Expressions.Expression(Of System.Func(Of T, TProperty)), System.Func(Of Testify.IAnonymousData, TProperty))
  nameWithType: AnonymousDataExtensions.Register<T, TProperty>(IRegisterAnonymousData, Expression<Func<T, TProperty>>, Func<IAnonymousData, TProperty>)
  nameWithType.vb: Register(Of T, TProperty)(IRegisterAnonymousData, Expression(Of Func(Of T, TProperty)), Func(Of IAnonymousData, TProperty))
- uid: Testify.AnonymousDateTime
  name: AnonymousDateTime
  href: api/Testify.AnonymousDateTime.html
  commentId: T:Testify.AnonymousDateTime
  fullName: Testify.AnonymousDateTime
  nameWithType: AnonymousDateTime
- uid: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData)
  name: AnyDateTime(IAnonymousData)
  href: api/Testify.AnonymousDateTime.html
  commentId: M:Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData)
  fullName: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData)
  nameWithType: AnonymousDateTime.AnyDateTime(IAnonymousData)
- uid: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,System.DateTime,System.DateTime)
  name: AnyDateTime(IAnonymousData, DateTime, DateTime)
  href: api/Testify.AnonymousDateTime.html
  commentId: M:Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,System.DateTime,System.DateTime)
  fullName: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData, System.DateTime, System.DateTime)
  nameWithType: AnonymousDateTime.AnyDateTime(IAnonymousData, DateTime, DateTime)
- uid: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,System.DateTime,System.DateTime,Testify.Distribution)
  name: AnyDateTime(IAnonymousData, DateTime, DateTime, Distribution)
  href: api/Testify.AnonymousDateTime.html
  commentId: M:Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,System.DateTime,System.DateTime,Testify.Distribution)
  fullName: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData, System.DateTime, System.DateTime, Testify.Distribution)
  nameWithType: AnonymousDateTime.AnyDateTime(IAnonymousData, DateTime, DateTime, Distribution)
- uid: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,Testify.Distribution)
  name: AnyDateTime(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDateTime.html
  commentId: M:Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDateTime.AnyDateTime(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDateTime.AnyDateTime(IAnonymousData, Distribution)
- uid: Testify.AnonymousDateTime.AnyDateTime*
  name: AnyDateTime
  href: api/Testify.AnonymousDateTime.html
  commentId: Overload:Testify.AnonymousDateTime.AnyDateTime
  fullName: Testify.AnonymousDateTime.AnyDateTime
  nameWithType: AnonymousDateTime.AnyDateTime
- uid: Testify.AnonymousDateTimeOffset
  name: AnonymousDateTimeOffset
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: T:Testify.AnonymousDateTimeOffset
  fullName: Testify.AnonymousDateTimeOffset
  nameWithType: AnonymousDateTimeOffset
- uid: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData)
  name: AnyDateTimeOffset(IAnonymousData)
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: M:Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData)
  fullName: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData)
  nameWithType: AnonymousDateTimeOffset.AnyDateTimeOffset(IAnonymousData)
- uid: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,System.DateTimeOffset,System.DateTimeOffset)
  name: AnyDateTimeOffset(IAnonymousData, DateTimeOffset, DateTimeOffset)
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: M:Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,System.DateTimeOffset,System.DateTimeOffset)
  fullName: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData, System.DateTimeOffset, System.DateTimeOffset)
  nameWithType: AnonymousDateTimeOffset.AnyDateTimeOffset(IAnonymousData, DateTimeOffset, DateTimeOffset)
- uid: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,System.DateTimeOffset,System.DateTimeOffset,Testify.Distribution)
  name: AnyDateTimeOffset(IAnonymousData, DateTimeOffset, DateTimeOffset, Distribution)
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: M:Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,System.DateTimeOffset,System.DateTimeOffset,Testify.Distribution)
  fullName: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData, System.DateTimeOffset, System.DateTimeOffset, Testify.Distribution)
  nameWithType: AnonymousDateTimeOffset.AnyDateTimeOffset(IAnonymousData, DateTimeOffset, DateTimeOffset, Distribution)
- uid: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,Testify.Distribution)
  name: AnyDateTimeOffset(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: M:Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDateTimeOffset.AnyDateTimeOffset(IAnonymousData, Distribution)
- uid: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset*
  name: AnyDateTimeOffset
  href: api/Testify.AnonymousDateTimeOffset.html
  commentId: Overload:Testify.AnonymousDateTimeOffset.AnyDateTimeOffset
  fullName: Testify.AnonymousDateTimeOffset.AnyDateTimeOffset
  nameWithType: AnonymousDateTimeOffset.AnyDateTimeOffset
- uid: Testify.AnonymousDecimal
  name: AnonymousDecimal
  href: api/Testify.AnonymousDecimal.html
  commentId: T:Testify.AnonymousDecimal
  fullName: Testify.AnonymousDecimal
  nameWithType: AnonymousDecimal
- uid: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData)
  name: AnyDecimal(IAnonymousData)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData)
  fullName: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData)
  nameWithType: AnonymousDecimal.AnyDecimal(IAnonymousData)
- uid: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,System.Decimal,System.Decimal)
  name: AnyDecimal(IAnonymousData, Decimal, Decimal)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,System.Decimal,System.Decimal)
  fullName: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData, System.Decimal, System.Decimal)
  nameWithType: AnonymousDecimal.AnyDecimal(IAnonymousData, Decimal, Decimal)
- uid: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,System.Decimal,System.Decimal,Testify.Distribution)
  name: AnyDecimal(IAnonymousData, Decimal, Decimal, Distribution)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,System.Decimal,System.Decimal,Testify.Distribution)
  fullName: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData, System.Decimal, System.Decimal, Testify.Distribution)
  nameWithType: AnonymousDecimal.AnyDecimal(IAnonymousData, Decimal, Decimal, Distribution)
- uid: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,Testify.Distribution)
  name: AnyDecimal(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDecimal.AnyDecimal(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDecimal.AnyDecimal(IAnonymousData, Distribution)
- uid: Testify.AnonymousDecimal.AnyDecimal*
  name: AnyDecimal
  href: api/Testify.AnonymousDecimal.html
  commentId: Overload:Testify.AnonymousDecimal.AnyDecimal
  fullName: Testify.AnonymousDecimal.AnyDecimal
  nameWithType: AnonymousDecimal.AnyDecimal
- uid: Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData)
  name: AnyNegativeDecimal(IAnonymousData)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData)
  fullName: Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData)
  nameWithType: AnonymousDecimal.AnyNegativeDecimal(IAnonymousData)
- uid: Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeDecimal(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDecimal.AnyNegativeDecimal(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDecimal.AnyNegativeDecimal(IAnonymousData, Distribution)
- uid: Testify.AnonymousDecimal.AnyNegativeDecimal*
  name: AnyNegativeDecimal
  href: api/Testify.AnonymousDecimal.html
  commentId: Overload:Testify.AnonymousDecimal.AnyNegativeDecimal
  fullName: Testify.AnonymousDecimal.AnyNegativeDecimal
  nameWithType: AnonymousDecimal.AnyNegativeDecimal
- uid: Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData)
  name: AnyPositiveDecimal(IAnonymousData)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData)
  fullName: Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData)
  nameWithType: AnonymousDecimal.AnyPositiveDecimal(IAnonymousData)
- uid: Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveDecimal(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDecimal.html
  commentId: M:Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDecimal.AnyPositiveDecimal(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDecimal.AnyPositiveDecimal(IAnonymousData, Distribution)
- uid: Testify.AnonymousDecimal.AnyPositiveDecimal*
  name: AnyPositiveDecimal
  href: api/Testify.AnonymousDecimal.html
  commentId: Overload:Testify.AnonymousDecimal.AnyPositiveDecimal
  fullName: Testify.AnonymousDecimal.AnyPositiveDecimal
  nameWithType: AnonymousDecimal.AnyPositiveDecimal
- uid: Testify.AnonymousDouble
  name: AnonymousDouble
  href: api/Testify.AnonymousDouble.html
  commentId: T:Testify.AnonymousDouble
  fullName: Testify.AnonymousDouble
  nameWithType: AnonymousDouble
- uid: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData)
  name: AnyDouble(IAnonymousData)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData)
  fullName: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData)
  nameWithType: AnonymousDouble.AnyDouble(IAnonymousData)
- uid: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData,System.Double,System.Double)
  name: AnyDouble(IAnonymousData, Double, Double)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData,System.Double,System.Double)
  fullName: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData, System.Double, System.Double)
  nameWithType: AnonymousDouble.AnyDouble(IAnonymousData, Double, Double)
- uid: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData,Testify.Distribution)
  name: AnyDouble(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDouble.AnyDouble(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDouble.AnyDouble(IAnonymousData, Distribution)
- uid: Testify.AnonymousDouble.AnyDouble*
  name: AnyDouble
  href: api/Testify.AnonymousDouble.html
  commentId: Overload:Testify.AnonymousDouble.AnyDouble
  fullName: Testify.AnonymousDouble.AnyDouble
  nameWithType: AnonymousDouble.AnyDouble
- uid: Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData)
  name: AnyNegativeDouble(IAnonymousData)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData)
  fullName: Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData)
  nameWithType: AnonymousDouble.AnyNegativeDouble(IAnonymousData)
- uid: Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeDouble(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDouble.AnyNegativeDouble(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDouble.AnyNegativeDouble(IAnonymousData, Distribution)
- uid: Testify.AnonymousDouble.AnyNegativeDouble*
  name: AnyNegativeDouble
  href: api/Testify.AnonymousDouble.html
  commentId: Overload:Testify.AnonymousDouble.AnyNegativeDouble
  fullName: Testify.AnonymousDouble.AnyNegativeDouble
  nameWithType: AnonymousDouble.AnyNegativeDouble
- uid: Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData)
  name: AnyPositiveDouble(IAnonymousData)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData)
  fullName: Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData)
  nameWithType: AnonymousDouble.AnyPositiveDouble(IAnonymousData)
- uid: Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveDouble(IAnonymousData, Distribution)
  href: api/Testify.AnonymousDouble.html
  commentId: M:Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousDouble.AnyPositiveDouble(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousDouble.AnyPositiveDouble(IAnonymousData, Distribution)
- uid: Testify.AnonymousDouble.AnyPositiveDouble*
  name: AnyPositiveDouble
  href: api/Testify.AnonymousDouble.html
  commentId: Overload:Testify.AnonymousDouble.AnyPositiveDouble
  fullName: Testify.AnonymousDouble.AnyPositiveDouble
  nameWithType: AnonymousDouble.AnyPositiveDouble
- uid: Testify.AnonymousEnum
  name: AnonymousEnum
  href: api/Testify.AnonymousEnum.html
  commentId: T:Testify.AnonymousEnum
  fullName: Testify.AnonymousEnum
  nameWithType: AnonymousEnum
- uid: Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData,System.Type)
  name: AnyEnumValue(IAnonymousData, Type)
  href: api/Testify.AnonymousEnum.html
  commentId: M:Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData,System.Type)
  fullName: Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData, System.Type)
  nameWithType: AnonymousEnum.AnyEnumValue(IAnonymousData, Type)
- uid: Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData,System.Type,Testify.Distribution)
  name: AnyEnumValue(IAnonymousData, Type, Distribution)
  href: api/Testify.AnonymousEnum.html
  commentId: M:Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData,System.Type,Testify.Distribution)
  fullName: Testify.AnonymousEnum.AnyEnumValue(Testify.IAnonymousData, System.Type, Testify.Distribution)
  nameWithType: AnonymousEnum.AnyEnumValue(IAnonymousData, Type, Distribution)
- uid: Testify.AnonymousEnum.AnyEnumValue*
  name: AnyEnumValue
  href: api/Testify.AnonymousEnum.html
  commentId: Overload:Testify.AnonymousEnum.AnyEnumValue
  fullName: Testify.AnonymousEnum.AnyEnumValue
  nameWithType: AnonymousEnum.AnyEnumValue
- uid: Testify.AnonymousEnum.AnyEnumValue``1(Testify.IAnonymousData)
  name: AnyEnumValue<T>(IAnonymousData)
  href: api/Testify.AnonymousEnum.html
  commentId: M:Testify.AnonymousEnum.AnyEnumValue``1(Testify.IAnonymousData)
  name.vb: AnyEnumValue(Of T)(IAnonymousData)
  fullName: Testify.AnonymousEnum.AnyEnumValue<T>(Testify.IAnonymousData)
  fullName.vb: Testify.AnonymousEnum.AnyEnumValue(Of T)(Testify.IAnonymousData)
  nameWithType: AnonymousEnum.AnyEnumValue<T>(IAnonymousData)
  nameWithType.vb: AnyEnumValue(Of T)(IAnonymousData)
- uid: Testify.AnonymousEnum.AnyEnumValue``1(Testify.IAnonymousData,Testify.Distribution)
  name: AnyEnumValue<T>(IAnonymousData, Distribution)
  href: api/Testify.AnonymousEnum.html
  commentId: M:Testify.AnonymousEnum.AnyEnumValue``1(Testify.IAnonymousData,Testify.Distribution)
  name.vb: AnyEnumValue(Of T)(IAnonymousData, Distribution)
  fullName: Testify.AnonymousEnum.AnyEnumValue<T>(Testify.IAnonymousData, Testify.Distribution)
  fullName.vb: Testify.AnonymousEnum.AnyEnumValue(Of T)(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousEnum.AnyEnumValue<T>(IAnonymousData, Distribution)
  nameWithType.vb: AnyEnumValue(Of T)(IAnonymousData, Distribution)
- uid: Testify.AnonymousEnumerable
  name: AnonymousEnumerable
  href: api/Testify.AnonymousEnumerable.html
  commentId: T:Testify.AnonymousEnumerable
  fullName: Testify.AnonymousEnumerable
  nameWithType: AnonymousEnumerable
- uid: Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData,System.Type)
  name: AnyEnumerable(IAnonymousData, Type)
  href: api/Testify.AnonymousEnumerable.html
  commentId: M:Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData,System.Type)
  fullName: Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData, System.Type)
  nameWithType: AnonymousEnumerable.AnyEnumerable(IAnonymousData, Type)
- uid: Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData,System.Type,System.Int32,System.Int32)
  name: AnyEnumerable(IAnonymousData, Type, Int32, Int32)
  href: api/Testify.AnonymousEnumerable.html
  commentId: M:Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData,System.Type,System.Int32,System.Int32)
  fullName: Testify.AnonymousEnumerable.AnyEnumerable(Testify.IAnonymousData, System.Type, System.Int32, System.Int32)
  nameWithType: AnonymousEnumerable.AnyEnumerable(IAnonymousData, Type, Int32, Int32)
- uid: Testify.AnonymousEnumerable.AnyEnumerable*
  name: AnyEnumerable
  href: api/Testify.AnonymousEnumerable.html
  commentId: Overload:Testify.AnonymousEnumerable.AnyEnumerable
  fullName: Testify.AnonymousEnumerable.AnyEnumerable
  nameWithType: AnonymousEnumerable.AnyEnumerable
- uid: Testify.AnonymousEnumerable.AnyEnumerable``1(Testify.IAnonymousData)
  name: AnyEnumerable<T>(IAnonymousData)
  href: api/Testify.AnonymousEnumerable.html
  commentId: M:Testify.AnonymousEnumerable.AnyEnumerable``1(Testify.IAnonymousData)
  name.vb: AnyEnumerable(Of T)(IAnonymousData)
  fullName: Testify.AnonymousEnumerable.AnyEnumerable<T>(Testify.IAnonymousData)
  fullName.vb: Testify.AnonymousEnumerable.AnyEnumerable(Of T)(Testify.IAnonymousData)
  nameWithType: AnonymousEnumerable.AnyEnumerable<T>(IAnonymousData)
  nameWithType.vb: AnyEnumerable(Of T)(IAnonymousData)
- uid: Testify.AnonymousEnumerable.AnyEnumerable``1(Testify.IAnonymousData,System.Int32,System.Int32)
  name: AnyEnumerable<T>(IAnonymousData, Int32, Int32)
  href: api/Testify.AnonymousEnumerable.html
  commentId: M:Testify.AnonymousEnumerable.AnyEnumerable``1(Testify.IAnonymousData,System.Int32,System.Int32)
  name.vb: AnyEnumerable(Of T)(IAnonymousData, Int32, Int32)
  fullName: Testify.AnonymousEnumerable.AnyEnumerable<T>(Testify.IAnonymousData, System.Int32, System.Int32)
  fullName.vb: Testify.AnonymousEnumerable.AnyEnumerable(Of T)(Testify.IAnonymousData, System.Int32, System.Int32)
  nameWithType: AnonymousEnumerable.AnyEnumerable<T>(IAnonymousData, Int32, Int32)
  nameWithType.vb: AnyEnumerable(Of T)(IAnonymousData, Int32, Int32)
- uid: Testify.AnonymousEnumerable.AnyItem*
  name: AnyItem<T>
  href: api/Testify.AnonymousEnumerable.html
  commentId: Overload:Testify.AnonymousEnumerable.AnyItem
  name.vb: AnyItem(Of T)
  fullName: Testify.AnonymousEnumerable.AnyItem<T>
  fullName.vb: Testify.AnonymousEnumerable.AnyItem(Of T)
  nameWithType: AnonymousEnumerable.AnyItem<T>
  nameWithType.vb: AnonymousEnumerable.AnyItem(Of T)
- uid: Testify.AnonymousEnumerable.AnyItem``1(Testify.IAnonymousData,System.Collections.Generic.IEnumerable{``0})
  name: AnyItem<T>(IAnonymousData, IEnumerable<T>)
  href: api/Testify.AnonymousEnumerable.html
  commentId: M:Testify.AnonymousEnumerable.AnyItem``1(Testify.IAnonymousData,System.Collections.Generic.IEnumerable{``0})
  name.vb: AnyItem(Of T)(IAnonymousData, IEnumerable(Of T))
  fullName: Testify.AnonymousEnumerable.AnyItem<T>(Testify.IAnonymousData, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: Testify.AnonymousEnumerable.AnyItem(Of T)(Testify.IAnonymousData, System.Collections.Generic.IEnumerable(Of T))
  nameWithType: AnonymousEnumerable.AnyItem<T>(IAnonymousData, IEnumerable<T>)
  nameWithType.vb: AnyItem(Of T)(IAnonymousData, IEnumerable(Of T))
- uid: Testify.AnonymousInt16
  name: AnonymousInt16
  href: api/Testify.AnonymousInt16.html
  commentId: T:Testify.AnonymousInt16
  fullName: Testify.AnonymousInt16
  nameWithType: AnonymousInt16
- uid: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData)
  name: AnyInt16(IAnonymousData)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData)
  nameWithType: AnonymousInt16.AnyInt16(IAnonymousData)
- uid: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,System.Int16,System.Int16)
  name: AnyInt16(IAnonymousData, Int16, Int16)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,System.Int16,System.Int16)
  fullName: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData, System.Int16, System.Int16)
  nameWithType: AnonymousInt16.AnyInt16(IAnonymousData, Int16, Int16)
- uid: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,System.Int16,System.Int16,Testify.Distribution)
  name: AnyInt16(IAnonymousData, Int16, Int16, Distribution)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,System.Int16,System.Int16,Testify.Distribution)
  fullName: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData, System.Int16, System.Int16, Testify.Distribution)
  nameWithType: AnonymousInt16.AnyInt16(IAnonymousData, Int16, Int16, Distribution)
- uid: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,Testify.Distribution)
  name: AnyInt16(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt16.AnyInt16(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt16.AnyInt16(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt16.AnyInt16*
  name: AnyInt16
  href: api/Testify.AnonymousInt16.html
  commentId: Overload:Testify.AnonymousInt16.AnyInt16
  fullName: Testify.AnonymousInt16.AnyInt16
  nameWithType: AnonymousInt16.AnyInt16
- uid: Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData)
  name: AnyNegativeInt16(IAnonymousData)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData)
  nameWithType: AnonymousInt16.AnyNegativeInt16(IAnonymousData)
- uid: Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeInt16(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt16.AnyNegativeInt16(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt16.AnyNegativeInt16(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt16.AnyNegativeInt16*
  name: AnyNegativeInt16
  href: api/Testify.AnonymousInt16.html
  commentId: Overload:Testify.AnonymousInt16.AnyNegativeInt16
  fullName: Testify.AnonymousInt16.AnyNegativeInt16
  nameWithType: AnonymousInt16.AnyNegativeInt16
- uid: Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData)
  name: AnyPositiveInt16(IAnonymousData)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData)
  nameWithType: AnonymousInt16.AnyPositiveInt16(IAnonymousData)
- uid: Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveInt16(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt16.html
  commentId: M:Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt16.AnyPositiveInt16(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt16.AnyPositiveInt16(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt16.AnyPositiveInt16*
  name: AnyPositiveInt16
  href: api/Testify.AnonymousInt16.html
  commentId: Overload:Testify.AnonymousInt16.AnyPositiveInt16
  fullName: Testify.AnonymousInt16.AnyPositiveInt16
  nameWithType: AnonymousInt16.AnyPositiveInt16
- uid: Testify.AnonymousInt32
  name: AnonymousInt32
  href: api/Testify.AnonymousInt32.html
  commentId: T:Testify.AnonymousInt32
  fullName: Testify.AnonymousInt32
  nameWithType: AnonymousInt32
- uid: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData)
  name: AnyInt32(IAnonymousData)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData)
  nameWithType: AnonymousInt32.AnyInt32(IAnonymousData)
- uid: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,System.Int32,System.Int32)
  name: AnyInt32(IAnonymousData, Int32, Int32)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,System.Int32,System.Int32)
  fullName: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData, System.Int32, System.Int32)
  nameWithType: AnonymousInt32.AnyInt32(IAnonymousData, Int32, Int32)
- uid: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,System.Int32,System.Int32,Testify.Distribution)
  name: AnyInt32(IAnonymousData, Int32, Int32, Distribution)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,System.Int32,System.Int32,Testify.Distribution)
  fullName: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData, System.Int32, System.Int32, Testify.Distribution)
  nameWithType: AnonymousInt32.AnyInt32(IAnonymousData, Int32, Int32, Distribution)
- uid: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,Testify.Distribution)
  name: AnyInt32(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt32.AnyInt32(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt32.AnyInt32(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt32.AnyInt32*
  name: AnyInt32
  href: api/Testify.AnonymousInt32.html
  commentId: Overload:Testify.AnonymousInt32.AnyInt32
  fullName: Testify.AnonymousInt32.AnyInt32
  nameWithType: AnonymousInt32.AnyInt32
- uid: Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData)
  name: AnyNegativeInt32(IAnonymousData)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData)
  nameWithType: AnonymousInt32.AnyNegativeInt32(IAnonymousData)
- uid: Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeInt32(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt32.AnyNegativeInt32(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt32.AnyNegativeInt32(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt32.AnyNegativeInt32*
  name: AnyNegativeInt32
  href: api/Testify.AnonymousInt32.html
  commentId: Overload:Testify.AnonymousInt32.AnyNegativeInt32
  fullName: Testify.AnonymousInt32.AnyNegativeInt32
  nameWithType: AnonymousInt32.AnyNegativeInt32
- uid: Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData)
  name: AnyPositiveInt32(IAnonymousData)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData)
  nameWithType: AnonymousInt32.AnyPositiveInt32(IAnonymousData)
- uid: Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveInt32(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt32.html
  commentId: M:Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt32.AnyPositiveInt32(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt32.AnyPositiveInt32(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt32.AnyPositiveInt32*
  name: AnyPositiveInt32
  href: api/Testify.AnonymousInt32.html
  commentId: Overload:Testify.AnonymousInt32.AnyPositiveInt32
  fullName: Testify.AnonymousInt32.AnyPositiveInt32
  nameWithType: AnonymousInt32.AnyPositiveInt32
- uid: Testify.AnonymousInt64
  name: AnonymousInt64
  href: api/Testify.AnonymousInt64.html
  commentId: T:Testify.AnonymousInt64
  fullName: Testify.AnonymousInt64
  nameWithType: AnonymousInt64
- uid: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData)
  name: AnyInt64(IAnonymousData)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData)
  nameWithType: AnonymousInt64.AnyInt64(IAnonymousData)
- uid: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,System.Int64,System.Int64)
  name: AnyInt64(IAnonymousData, Int64, Int64)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,System.Int64,System.Int64)
  fullName: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData, System.Int64, System.Int64)
  nameWithType: AnonymousInt64.AnyInt64(IAnonymousData, Int64, Int64)
- uid: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,System.Int64,System.Int64,Testify.Distribution)
  name: AnyInt64(IAnonymousData, Int64, Int64, Distribution)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,System.Int64,System.Int64,Testify.Distribution)
  fullName: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData, System.Int64, System.Int64, Testify.Distribution)
  nameWithType: AnonymousInt64.AnyInt64(IAnonymousData, Int64, Int64, Distribution)
- uid: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,Testify.Distribution)
  name: AnyInt64(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt64.AnyInt64(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt64.AnyInt64(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt64.AnyInt64*
  name: AnyInt64
  href: api/Testify.AnonymousInt64.html
  commentId: Overload:Testify.AnonymousInt64.AnyInt64
  fullName: Testify.AnonymousInt64.AnyInt64
  nameWithType: AnonymousInt64.AnyInt64
- uid: Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData)
  name: AnyNegativeInt64(IAnonymousData)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData)
  nameWithType: AnonymousInt64.AnyNegativeInt64(IAnonymousData)
- uid: Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeInt64(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt64.AnyNegativeInt64(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt64.AnyNegativeInt64(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt64.AnyNegativeInt64*
  name: AnyNegativeInt64
  href: api/Testify.AnonymousInt64.html
  commentId: Overload:Testify.AnonymousInt64.AnyNegativeInt64
  fullName: Testify.AnonymousInt64.AnyNegativeInt64
  nameWithType: AnonymousInt64.AnyNegativeInt64
- uid: Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData)
  name: AnyPositiveInt64(IAnonymousData)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData)
  fullName: Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData)
  nameWithType: AnonymousInt64.AnyPositiveInt64(IAnonymousData)
- uid: Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveInt64(IAnonymousData, Distribution)
  href: api/Testify.AnonymousInt64.html
  commentId: M:Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousInt64.AnyPositiveInt64(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousInt64.AnyPositiveInt64(IAnonymousData, Distribution)
- uid: Testify.AnonymousInt64.AnyPositiveInt64*
  name: AnyPositiveInt64
  href: api/Testify.AnonymousInt64.html
  commentId: Overload:Testify.AnonymousInt64.AnyPositiveInt64
  fullName: Testify.AnonymousInt64.AnyPositiveInt64
  nameWithType: AnonymousInt64.AnyPositiveInt64
- uid: Testify.AnonymousMoq
  name: AnonymousMoq
  href: api/Testify.AnonymousMoq.html
  commentId: T:Testify.AnonymousMoq
  fullName: Testify.AnonymousMoq
  nameWithType: AnonymousMoq
- uid: Testify.AnonymousMoq.FreezeMock*
  name: FreezeMock<T>
  href: api/Testify.AnonymousMoq.html
  commentId: Overload:Testify.AnonymousMoq.FreezeMock
  name.vb: FreezeMock(Of T)
  fullName: Testify.AnonymousMoq.FreezeMock<T>
  fullName.vb: Testify.AnonymousMoq.FreezeMock(Of T)
  nameWithType: AnonymousMoq.FreezeMock<T>
  nameWithType.vb: AnonymousMoq.FreezeMock(Of T)
- uid: Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData)
  name: FreezeMock<T>(IRegisterAnonymousData)
  href: api/Testify.AnonymousMoq.html
  commentId: M:Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData)
  name.vb: FreezeMock(Of T)(IRegisterAnonymousData)
  fullName: Testify.AnonymousMoq.FreezeMock<T>(Testify.IRegisterAnonymousData)
  fullName.vb: Testify.AnonymousMoq.FreezeMock(Of T)(Testify.IRegisterAnonymousData)
  nameWithType: AnonymousMoq.FreezeMock<T>(IRegisterAnonymousData)
  nameWithType.vb: FreezeMock(Of T)(IRegisterAnonymousData)
- uid: Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData,Moq.Mock{``0})
  name: FreezeMock<T>(IRegisterAnonymousData, Mock<T>)
  href: api/Testify.AnonymousMoq.html
  commentId: M:Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData,Moq.Mock{``0})
  name.vb: FreezeMock(Of T)(IRegisterAnonymousData, Mock(Of T))
  fullName: Testify.AnonymousMoq.FreezeMock<T>(Testify.IRegisterAnonymousData, Moq.Mock<T>)
  fullName.vb: Testify.AnonymousMoq.FreezeMock(Of T)(Testify.IRegisterAnonymousData, Moq.Mock(Of T))
  nameWithType: AnonymousMoq.FreezeMock<T>(IRegisterAnonymousData, Mock<T>)
  nameWithType.vb: FreezeMock(Of T)(IRegisterAnonymousData, Mock(Of T))
- uid: Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData,System.Action{Moq.Mock{``0}})
  name: FreezeMock<T>(IRegisterAnonymousData, Action<Mock<T>>)
  href: api/Testify.AnonymousMoq.html
  commentId: M:Testify.AnonymousMoq.FreezeMock``1(Testify.IRegisterAnonymousData,System.Action{Moq.Mock{``0}})
  name.vb: FreezeMock(Of T)(IRegisterAnonymousData, Action(Of Mock(Of T)))
  fullName: Testify.AnonymousMoq.FreezeMock<T>(Testify.IRegisterAnonymousData, System.Action<Moq.Mock<T>>)
  fullName.vb: Testify.AnonymousMoq.FreezeMock(Of T)(Testify.IRegisterAnonymousData, System.Action(Of Moq.Mock(Of T)))
  nameWithType: AnonymousMoq.FreezeMock<T>(IRegisterAnonymousData, Action<Mock<T>>)
  nameWithType.vb: FreezeMock(Of T)(IRegisterAnonymousData, Action(Of Mock(Of T)))
- uid: Testify.AnonymousMoq.RegisterMock*
  name: RegisterMock<T>
  href: api/Testify.AnonymousMoq.html
  commentId: Overload:Testify.AnonymousMoq.RegisterMock
  name.vb: RegisterMock(Of T)
  fullName: Testify.AnonymousMoq.RegisterMock<T>
  fullName.vb: Testify.AnonymousMoq.RegisterMock(Of T)
  nameWithType: AnonymousMoq.RegisterMock<T>
  nameWithType.vb: AnonymousMoq.RegisterMock(Of T)
- uid: Testify.AnonymousMoq.RegisterMock``1(Testify.IRegisterAnonymousData,System.Action{Moq.Mock{``0}})
  name: RegisterMock<T>(IRegisterAnonymousData, Action<Mock<T>>)
  href: api/Testify.AnonymousMoq.html
  commentId: M:Testify.AnonymousMoq.RegisterMock``1(Testify.IRegisterAnonymousData,System.Action{Moq.Mock{``0}})
  name.vb: RegisterMock(Of T)(IRegisterAnonymousData, Action(Of Mock(Of T)))
  fullName: Testify.AnonymousMoq.RegisterMock<T>(Testify.IRegisterAnonymousData, System.Action<Moq.Mock<T>>)
  fullName.vb: Testify.AnonymousMoq.RegisterMock(Of T)(Testify.IRegisterAnonymousData, System.Action(Of Moq.Mock(Of T)))
  nameWithType: AnonymousMoq.RegisterMock<T>(IRegisterAnonymousData, Action<Mock<T>>)
  nameWithType.vb: RegisterMock(Of T)(IRegisterAnonymousData, Action(Of Mock(Of T)))
- uid: Testify.AnonymousSingle
  name: AnonymousSingle
  href: api/Testify.AnonymousSingle.html
  commentId: T:Testify.AnonymousSingle
  fullName: Testify.AnonymousSingle
  nameWithType: AnonymousSingle
- uid: Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData)
  name: AnyNegativeSingle(IAnonymousData)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData)
  fullName: Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData)
  nameWithType: AnonymousSingle.AnyNegativeSingle(IAnonymousData)
- uid: Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData,Testify.Distribution)
  name: AnyNegativeSingle(IAnonymousData, Distribution)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousSingle.AnyNegativeSingle(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousSingle.AnyNegativeSingle(IAnonymousData, Distribution)
- uid: Testify.AnonymousSingle.AnyNegativeSingle*
  name: AnyNegativeSingle
  href: api/Testify.AnonymousSingle.html
  commentId: Overload:Testify.AnonymousSingle.AnyNegativeSingle
  fullName: Testify.AnonymousSingle.AnyNegativeSingle
  nameWithType: AnonymousSingle.AnyNegativeSingle
- uid: Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData)
  name: AnyPositiveSingle(IAnonymousData)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData)
  fullName: Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData)
  nameWithType: AnonymousSingle.AnyPositiveSingle(IAnonymousData)
- uid: Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData,Testify.Distribution)
  name: AnyPositiveSingle(IAnonymousData, Distribution)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousSingle.AnyPositiveSingle(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousSingle.AnyPositiveSingle(IAnonymousData, Distribution)
- uid: Testify.AnonymousSingle.AnyPositiveSingle*
  name: AnyPositiveSingle
  href: api/Testify.AnonymousSingle.html
  commentId: Overload:Testify.AnonymousSingle.AnyPositiveSingle
  fullName: Testify.AnonymousSingle.AnyPositiveSingle
  nameWithType: AnonymousSingle.AnyPositiveSingle
- uid: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData)
  name: AnySingle(IAnonymousData)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData)
  fullName: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData)
  nameWithType: AnonymousSingle.AnySingle(IAnonymousData)
- uid: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,System.Single,System.Single)
  name: AnySingle(IAnonymousData, Single, Single)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,System.Single,System.Single)
  fullName: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData, System.Single, System.Single)
  nameWithType: AnonymousSingle.AnySingle(IAnonymousData, Single, Single)
- uid: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,System.Single,System.Single,Testify.Distribution)
  name: AnySingle(IAnonymousData, Single, Single, Distribution)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,System.Single,System.Single,Testify.Distribution)
  fullName: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData, System.Single, System.Single, Testify.Distribution)
  nameWithType: AnonymousSingle.AnySingle(IAnonymousData, Single, Single, Distribution)
- uid: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,Testify.Distribution)
  name: AnySingle(IAnonymousData, Distribution)
  href: api/Testify.AnonymousSingle.html
  commentId: M:Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousSingle.AnySingle(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousSingle.AnySingle(IAnonymousData, Distribution)
- uid: Testify.AnonymousSingle.AnySingle*
  name: AnySingle
  href: api/Testify.AnonymousSingle.html
  commentId: Overload:Testify.AnonymousSingle.AnySingle
  fullName: Testify.AnonymousSingle.AnySingle
  nameWithType: AnonymousSingle.AnySingle
- uid: Testify.AnonymousString
  name: AnonymousString
  href: api/Testify.AnonymousString.html
  commentId: T:Testify.AnonymousString
  fullName: Testify.AnonymousString
  nameWithType: AnonymousString
- uid: Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData)
  name: AnyFirstName(IAnonymousData)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData)
  fullName: Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData)
  nameWithType: AnonymousString.AnyFirstName(IAnonymousData)
- uid: Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData,System.Boolean)
  name: AnyFirstName(IAnonymousData, Boolean)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData,System.Boolean)
  fullName: Testify.AnonymousString.AnyFirstName(Testify.IAnonymousData, System.Boolean)
  nameWithType: AnonymousString.AnyFirstName(IAnonymousData, Boolean)
- uid: Testify.AnonymousString.AnyFirstName*
  name: AnyFirstName
  href: api/Testify.AnonymousString.html
  commentId: Overload:Testify.AnonymousString.AnyFirstName
  fullName: Testify.AnonymousString.AnyFirstName
  nameWithType: AnonymousString.AnyFirstName
- uid: Testify.AnonymousString.AnyFullName(Testify.IAnonymousData)
  name: AnyFullName(IAnonymousData)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyFullName(Testify.IAnonymousData)
  fullName: Testify.AnonymousString.AnyFullName(Testify.IAnonymousData)
  nameWithType: AnonymousString.AnyFullName(IAnonymousData)
- uid: Testify.AnonymousString.AnyFullName(Testify.IAnonymousData,System.Boolean)
  name: AnyFullName(IAnonymousData, Boolean)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyFullName(Testify.IAnonymousData,System.Boolean)
  fullName: Testify.AnonymousString.AnyFullName(Testify.IAnonymousData, System.Boolean)
  nameWithType: AnonymousString.AnyFullName(IAnonymousData, Boolean)
- uid: Testify.AnonymousString.AnyFullName*
  name: AnyFullName
  href: api/Testify.AnonymousString.html
  commentId: Overload:Testify.AnonymousString.AnyFullName
  fullName: Testify.AnonymousString.AnyFullName
  nameWithType: AnonymousString.AnyFullName
- uid: Testify.AnonymousString.AnyString(Testify.IAnonymousData)
  name: AnyString(IAnonymousData)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyString(Testify.IAnonymousData)
  fullName: Testify.AnonymousString.AnyString(Testify.IAnonymousData)
  nameWithType: AnonymousString.AnyString(IAnonymousData)
- uid: Testify.AnonymousString.AnyString(Testify.IAnonymousData,System.Int32,System.Int32)
  name: AnyString(IAnonymousData, Int32, Int32)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyString(Testify.IAnonymousData,System.Int32,System.Int32)
  fullName: Testify.AnonymousString.AnyString(Testify.IAnonymousData, System.Int32, System.Int32)
  nameWithType: AnonymousString.AnyString(IAnonymousData, Int32, Int32)
- uid: Testify.AnonymousString.AnyString(Testify.IAnonymousData,System.Int32,System.Int32,Testify.Distribution)
  name: AnyString(IAnonymousData, Int32, Int32, Distribution)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyString(Testify.IAnonymousData,System.Int32,System.Int32,Testify.Distribution)
  fullName: Testify.AnonymousString.AnyString(Testify.IAnonymousData, System.Int32, System.Int32, Testify.Distribution)
  nameWithType: AnonymousString.AnyString(IAnonymousData, Int32, Int32, Distribution)
- uid: Testify.AnonymousString.AnyString(Testify.IAnonymousData,Testify.Distribution)
  name: AnyString(IAnonymousData, Distribution)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnyString(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousString.AnyString(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousString.AnyString(IAnonymousData, Distribution)
- uid: Testify.AnonymousString.AnyString*
  name: AnyString
  href: api/Testify.AnonymousString.html
  commentId: Overload:Testify.AnonymousString.AnyString
  fullName: Testify.AnonymousString.AnyString
  nameWithType: AnonymousString.AnyString
- uid: Testify.AnonymousString.AnySurname(Testify.IAnonymousData)
  name: AnySurname(IAnonymousData)
  href: api/Testify.AnonymousString.html
  commentId: M:Testify.AnonymousString.AnySurname(Testify.IAnonymousData)
  fullName: Testify.AnonymousString.AnySurname(Testify.IAnonymousData)
  nameWithType: AnonymousString.AnySurname(IAnonymousData)
- uid: Testify.AnonymousString.AnySurname*
  name: AnySurname
  href: api/Testify.AnonymousString.html
  commentId: Overload:Testify.AnonymousString.AnySurname
  fullName: Testify.AnonymousString.AnySurname
  nameWithType: AnonymousString.AnySurname
- uid: Testify.AnonymousTimeSpan
  name: AnonymousTimeSpan
  href: api/Testify.AnonymousTimeSpan.html
  commentId: T:Testify.AnonymousTimeSpan
  fullName: Testify.AnonymousTimeSpan
  nameWithType: AnonymousTimeSpan
- uid: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData)
  name: AnyTimeSpan(IAnonymousData)
  href: api/Testify.AnonymousTimeSpan.html
  commentId: M:Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData)
  fullName: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData)
  nameWithType: AnonymousTimeSpan.AnyTimeSpan(IAnonymousData)
- uid: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,System.TimeSpan,System.TimeSpan)
  name: AnyTimeSpan(IAnonymousData, TimeSpan, TimeSpan)
  href: api/Testify.AnonymousTimeSpan.html
  commentId: M:Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,System.TimeSpan,System.TimeSpan)
  fullName: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData, System.TimeSpan, System.TimeSpan)
  nameWithType: AnonymousTimeSpan.AnyTimeSpan(IAnonymousData, TimeSpan, TimeSpan)
- uid: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,System.TimeSpan,System.TimeSpan,Testify.Distribution)
  name: AnyTimeSpan(IAnonymousData, TimeSpan, TimeSpan, Distribution)
  href: api/Testify.AnonymousTimeSpan.html
  commentId: M:Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,System.TimeSpan,System.TimeSpan,Testify.Distribution)
  fullName: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData, System.TimeSpan, System.TimeSpan, Testify.Distribution)
  nameWithType: AnonymousTimeSpan.AnyTimeSpan(IAnonymousData, TimeSpan, TimeSpan, Distribution)
- uid: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,Testify.Distribution)
  name: AnyTimeSpan(IAnonymousData, Distribution)
  href: api/Testify.AnonymousTimeSpan.html
  commentId: M:Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData,Testify.Distribution)
  fullName: Testify.AnonymousTimeSpan.AnyTimeSpan(Testify.IAnonymousData, Testify.Distribution)
  nameWithType: AnonymousTimeSpan.AnyTimeSpan(IAnonymousData, Distribution)
- uid: Testify.AnonymousTimeSpan.AnyTimeSpan*
  name: AnyTimeSpan
  href: api/Testify.AnonymousTimeSpan.html
  commentId: Overload:Testify.AnonymousTimeSpan.AnyTimeSpan
  fullName: Testify.AnonymousTimeSpan.AnyTimeSpan
  nameWithType: AnonymousTimeSpan.AnyTimeSpan
- uid: Testify.AssertionException
  name: AssertionException
  href: api/Testify.AssertionException.html
  commentId: T:Testify.AssertionException
  fullName: Testify.AssertionException
  nameWithType: AssertionException
- uid: Testify.AssertionException.#ctor
  name: AssertionException()
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor
  fullName: Testify.AssertionException.AssertionException()
  nameWithType: AssertionException.AssertionException()
- uid: Testify.AssertionException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  name: AssertionException(IEnumerable<Exception>)
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.Collections.Generic.IEnumerable{System.Exception})
  name.vb: AssertionException(IEnumerable(Of Exception))
  fullName: Testify.AssertionException.AssertionException(System.Collections.Generic.IEnumerable<System.Exception>)
  fullName.vb: Testify.AssertionException.AssertionException(System.Collections.Generic.IEnumerable(Of System.Exception))
  nameWithType: AssertionException.AssertionException(IEnumerable<Exception>)
  nameWithType.vb: AssertionException(IEnumerable(Of Exception))
- uid: Testify.AssertionException.#ctor(System.Exception[])
  name: AssertionException(Exception[])
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.Exception[])
  name.vb: AssertionException(Exception())
  fullName: Testify.AssertionException.AssertionException(System.Exception[])
  fullName.vb: Testify.AssertionException.AssertionException(System.Exception())
  nameWithType: AssertionException.AssertionException(Exception[])
  nameWithType.vb: AssertionException(Exception())
- uid: Testify.AssertionException.#ctor(System.String)
  name: AssertionException(String)
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.String)
  fullName: Testify.AssertionException.AssertionException(System.String)
  nameWithType: AssertionException.AssertionException(String)
- uid: Testify.AssertionException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  name: AssertionException(String, IEnumerable<Exception>)
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Exception})
  name.vb: AssertionException(String, IEnumerable(Of Exception))
  fullName: Testify.AssertionException.AssertionException(System.String, System.Collections.Generic.IEnumerable<System.Exception>)
  fullName.vb: Testify.AssertionException.AssertionException(System.String, System.Collections.Generic.IEnumerable(Of System.Exception))
  nameWithType: AssertionException.AssertionException(String, IEnumerable<Exception>)
  nameWithType.vb: AssertionException(String, IEnumerable(Of Exception))
- uid: Testify.AssertionException.#ctor(System.String,System.Collections.Generic.IList{System.Exception})
  name: AssertionException(String, IList<Exception>)
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.String,System.Collections.Generic.IList{System.Exception})
  name.vb: AssertionException(String, IList(Of Exception))
  fullName: Testify.AssertionException.AssertionException(System.String, System.Collections.Generic.IList<System.Exception>)
  fullName.vb: Testify.AssertionException.AssertionException(System.String, System.Collections.Generic.IList(Of System.Exception))
  nameWithType: AssertionException.AssertionException(String, IList<Exception>)
  nameWithType.vb: AssertionException(String, IList(Of Exception))
- uid: Testify.AssertionException.#ctor(System.String,System.Exception)
  name: AssertionException(String, Exception)
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.String,System.Exception)
  fullName: Testify.AssertionException.AssertionException(System.String, System.Exception)
  nameWithType: AssertionException.AssertionException(String, Exception)
- uid: Testify.AssertionException.#ctor(System.String,System.Exception[])
  name: AssertionException(String, Exception[])
  href: api/Testify.AssertionException.html
  commentId: M:Testify.AssertionException.#ctor(System.String,System.Exception[])
  name.vb: AssertionException(String, Exception())
  fullName: Testify.AssertionException.AssertionException(System.String, System.Exception[])
  fullName.vb: Testify.AssertionException.AssertionException(System.String, System.Exception())
  nameWithType: AssertionException.AssertionException(String, Exception[])
  nameWithType.vb: AssertionException(String, Exception())
- uid: Testify.AssertionException.#ctor*
  name: AssertionException
  href: api/Testify.AssertionException.html
  commentId: Overload:Testify.AssertionException.#ctor
  fullName: Testify.AssertionException.AssertionException
  nameWithType: AssertionException.AssertionException
- uid: Testify.Assertions
  name: Assertions
  href: api/Testify.Assertions.html
  commentId: T:Testify.Assertions
  fullName: Testify.Assertions
  nameWithType: Assertions
- uid: Testify.Assertions.Assert(System.Action)
  name: Assert(Action)
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Assert(System.Action)
  fullName: Testify.Assertions.Assert(System.Action)
  nameWithType: Assertions.Assert(Action)
- uid: Testify.Assertions.Assert*
  name: Assert<T>
  href: api/Testify.Assertions.html
  commentId: Overload:Testify.Assertions.Assert
  name.vb: Assert(Of T)
  fullName: Testify.Assertions.Assert<T>
  fullName.vb: Testify.Assertions.Assert(Of T)
  nameWithType: Assertions.Assert<T>
  nameWithType.vb: Assertions.Assert(Of T)
- uid: Testify.Assertions.Assert``1(``0)
  name: Assert<T>(T)
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Assert``1(``0)
  name.vb: Assert(Of T)(T)
  fullName: Testify.Assertions.Assert<T>(T)
  fullName.vb: Testify.Assertions.Assert(Of T)(T)
  nameWithType: Assertions.Assert<T>(T)
  nameWithType.vb: Assert(Of T)(T)
- uid: Testify.Assertions.AssertAll(System.String,System.Action[])
  name: AssertAll(String, Action[])
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.AssertAll(System.String,System.Action[])
  name.vb: AssertAll(String, Action())
  fullName: Testify.Assertions.AssertAll(System.String, System.Action[])
  fullName.vb: Testify.Assertions.AssertAll(System.String, System.Action())
  nameWithType: Assertions.AssertAll(String, Action[])
  nameWithType.vb: AssertAll(String, Action())
- uid: Testify.Assertions.AssertAll(System.String,System.Collections.Generic.IEnumerable{System.Action})
  name: AssertAll(String, IEnumerable<Action>)
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.AssertAll(System.String,System.Collections.Generic.IEnumerable{System.Action})
  name.vb: AssertAll(String, IEnumerable(Of Action))
  fullName: Testify.Assertions.AssertAll(System.String, System.Collections.Generic.IEnumerable<System.Action>)
  fullName.vb: Testify.Assertions.AssertAll(System.String, System.Collections.Generic.IEnumerable(Of System.Action))
  nameWithType: Assertions.AssertAll(String, IEnumerable<Action>)
  nameWithType.vb: AssertAll(String, IEnumerable(Of Action))
- uid: Testify.Assertions.AssertAll*
  name: AssertAll
  href: api/Testify.Assertions.html
  commentId: Overload:Testify.Assertions.AssertAll
  fullName: Testify.Assertions.AssertAll
  nameWithType: Assertions.AssertAll
- uid: Testify.Assertions.Fail(System.String)
  name: Fail(String)
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Fail(System.String)
  fullName: Testify.Assertions.Fail(System.String)
  nameWithType: Assertions.Fail(String)
- uid: Testify.Assertions.Fail(System.String,System.Object[])
  name: Fail(String, Object[])
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Fail(System.String,System.Object[])
  name.vb: Fail(String, Object())
  fullName: Testify.Assertions.Fail(System.String, System.Object[])
  fullName.vb: Testify.Assertions.Fail(System.String, System.Object())
  nameWithType: Assertions.Fail(String, Object[])
  nameWithType.vb: Fail(String, Object())
- uid: Testify.Assertions.Fail*
  name: Fail
  href: api/Testify.Assertions.html
  commentId: Overload:Testify.Assertions.Fail
  fullName: Testify.Assertions.Fail
  nameWithType: Assertions.Fail
- uid: Testify.Assertions.ReplaceNullChars(System.String)
  name: ReplaceNullChars(String)
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.ReplaceNullChars(System.String)
  fullName: Testify.Assertions.ReplaceNullChars(System.String)
  nameWithType: Assertions.ReplaceNullChars(String)
- uid: Testify.Assertions.ReplaceNullChars*
  name: ReplaceNullChars
  href: api/Testify.Assertions.html
  commentId: Overload:Testify.Assertions.ReplaceNullChars
  fullName: Testify.Assertions.ReplaceNullChars
  nameWithType: Assertions.ReplaceNullChars
- uid: Testify.Assertions.Throw(System.String,System.Collections.Generic.IEnumerable{System.Exception},System.String,System.String,System.Object[])
  name: Throw(String, IEnumerable<Exception>, String, String, Object[])
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Throw(System.String,System.Collections.Generic.IEnumerable{System.Exception},System.String,System.String,System.Object[])
  name.vb: Throw(String, IEnumerable(Of Exception), String, String, Object())
  fullName: Testify.Assertions.Throw(System.String, System.Collections.Generic.IEnumerable<System.Exception>, System.String, System.String, System.Object[])
  fullName.vb: Testify.Assertions.Throw(System.String, System.Collections.Generic.IEnumerable(Of System.Exception), System.String, System.String, System.Object())
  nameWithType: Assertions.Throw(String, IEnumerable<Exception>, String, String, Object[])
  nameWithType.vb: Throw(String, IEnumerable(Of Exception), String, String, Object())
- uid: Testify.Assertions.Throw(System.String,System.Exception,System.String,System.String,System.Object[])
  name: Throw(String, Exception, String, String, Object[])
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Throw(System.String,System.Exception,System.String,System.String,System.Object[])
  name.vb: Throw(String, Exception, String, String, Object())
  fullName: Testify.Assertions.Throw(System.String, System.Exception, System.String, System.String, System.Object[])
  fullName.vb: Testify.Assertions.Throw(System.String, System.Exception, System.String, System.String, System.Object())
  nameWithType: Assertions.Throw(String, Exception, String, String, Object[])
  nameWithType.vb: Throw(String, Exception, String, String, Object())
- uid: Testify.Assertions.Throw(System.String,System.String,System.String,System.Object[])
  name: Throw(String, String, String, Object[])
  href: api/Testify.Assertions.html
  commentId: M:Testify.Assertions.Throw(System.String,System.String,System.String,System.Object[])
  name.vb: Throw(String, String, String, Object())
  fullName: Testify.Assertions.Throw(System.String, System.String, System.String, System.Object[])
  fullName.vb: Testify.Assertions.Throw(System.String, System.String, System.String, System.Object())
  nameWithType: Assertions.Throw(String, String, String, Object[])
  nameWithType.vb: Throw(String, String, String, Object())
- uid: Testify.Assertions.Throw*
  name: Throw
  href: api/Testify.Assertions.html
  commentId: Overload:Testify.Assertions.Throw
  fullName: Testify.Assertions.Throw
  nameWithType: Assertions.Throw
- uid: Testify.Classifier`1
  name: Classifier<TValue>
  href: api/Testify.Classifier-1.html
  commentId: T:Testify.Classifier`1
  name.vb: Classifier(Of TValue)
  fullName: Testify.Classifier<TValue>
  fullName.vb: Testify.Classifier(Of TValue)
  nameWithType: Classifier<TValue>
  nameWithType.vb: Classifier(Of TValue)
- uid: Testify.Classifier`1.AddClassification(System.String,System.Predicate{`0})
  name: AddClassification(String, Predicate<TValue>)
  href: api/Testify.Classifier-1.html
  commentId: M:Testify.Classifier`1.AddClassification(System.String,System.Predicate{`0})
  name.vb: AddClassification(String, Predicate(Of TValue))
  fullName: Testify.Classifier<TValue>.AddClassification(System.String, System.Predicate<TValue>)
  fullName.vb: Testify.Classifier(Of TValue).AddClassification(System.String, System.Predicate(Of TValue))
  nameWithType: Classifier<TValue>.AddClassification(String, Predicate<TValue>)
  nameWithType.vb: AddClassification(String, Predicate(Of TValue))
- uid: Testify.Classifier`1.AddClassification*
  name: AddClassification
  href: api/Testify.Classifier-1.html
  commentId: Overload:Testify.Classifier`1.AddClassification
  fullName: Testify.Classifier.AddClassification
  nameWithType: Classifier.AddClassification
- uid: Testify.Classifier`1.Classify(`0)
  name: Classify(TValue)
  href: api/Testify.Classifier-1.html
  commentId: M:Testify.Classifier`1.Classify(`0)
  fullName: Testify.Classifier<TValue>.Classify(TValue)
  fullName.vb: Testify.Classifier(Of TValue).Classify(TValue)
  nameWithType: Classifier<TValue>.Classify(TValue)
- uid: Testify.Classifier`1.Classify(System.Func{`0})
  name: Classify(Func<TValue>)
  href: api/Testify.Classifier-1.html
  commentId: M:Testify.Classifier`1.Classify(System.Func{`0})
  name.vb: Classify(Func(Of TValue))
  fullName: Testify.Classifier<TValue>.Classify(System.Func<TValue>)
  fullName.vb: Testify.Classifier(Of TValue).Classify(System.Func(Of TValue))
  nameWithType: Classifier<TValue>.Classify(Func<TValue>)
  nameWithType.vb: Classify(Func(Of TValue))
- uid: Testify.Classifier`1.Classify(System.Int32,System.Func{`0})
  name: Classify(Int32, Func<TValue>)
  href: api/Testify.Classifier-1.html
  commentId: M:Testify.Classifier`1.Classify(System.Int32,System.Func{`0})
  name.vb: Classify(Int32, Func(Of TValue))
  fullName: Testify.Classifier<TValue>.Classify(System.Int32, System.Func<TValue>)
  fullName.vb: Testify.Classifier(Of TValue).Classify(System.Int32, System.Func(Of TValue))
  nameWithType: Classifier<TValue>.Classify(Int32, Func<TValue>)
  nameWithType.vb: Classify(Int32, Func(Of TValue))
- uid: Testify.Classifier`1.Classify*
  name: Classify
  href: api/Testify.Classifier-1.html
  commentId: Overload:Testify.Classifier`1.Classify
  fullName: Testify.Classifier.Classify
  nameWithType: Classifier.Classify
- uid: Testify.Classifier`1.Count
  name: Count
  href: api/Testify.Classifier-1.html
  commentId: P:Testify.Classifier`1.Count
  fullName: Testify.Classifier<TValue>.Count
  fullName.vb: Testify.Classifier(Of TValue).Count
  nameWithType: Classifier<TValue>.Count
- uid: Testify.Classifier`1.Count*
  name: Count
  href: api/Testify.Classifier-1.html
  commentId: Overload:Testify.Classifier`1.Count
  fullName: Testify.Classifier<TValue>.Count
  fullName.vb: Testify.Classifier(Of TValue).Count
  nameWithType: Classifier<TValue>.Count
  nameWithType.vb: Classifier(Of TValue).Count
- uid: Testify.Classifier`1.Item(System.String)
  name: Item[String]
  href: api/Testify.Classifier-1.html
  commentId: P:Testify.Classifier`1.Item(System.String)
  name.vb: Item(String)
  fullName: Testify.Classifier<TValue>.Item[System.String]
  fullName.vb: Testify.Classifier(Of TValue).Item(System.String)
  nameWithType: Classifier<TValue>.Item[String]
  nameWithType.vb: Item(String)
- uid: Testify.Classifier`1.Item*
  name: Item
  href: api/Testify.Classifier-1.html
  commentId: Overload:Testify.Classifier`1.Item
  fullName: Testify.Classifier<TValue>.Item
  fullName.vb: Testify.Classifier(Of TValue).Item
  nameWithType: Classifier<TValue>.Item
  nameWithType.vb: Classifier(Of TValue).Item
- uid: Testify.CollectionAssertions
  name: CollectionAssertions
  href: api/Testify.CollectionAssertions.html
  commentId: T:Testify.CollectionAssertions
  fullName: Testify.CollectionAssertions
  nameWithType: CollectionAssertions
- uid: Testify.CollectionAssertions.AllItemsAreInstancesOfType*
  name: AllItemsAreInstancesOfType<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.AllItemsAreInstancesOfType
  name.vb: AllItemsAreInstancesOfType(Of T)
  fullName: Testify.CollectionAssertions.AllItemsAreInstancesOfType<T>
  fullName.vb: Testify.CollectionAssertions.AllItemsAreInstancesOfType(Of T)
  nameWithType: CollectionAssertions.AllItemsAreInstancesOfType<T>
  nameWithType.vb: CollectionAssertions.AllItemsAreInstancesOfType(Of T)
- uid: Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type)
  name: AllItemsAreInstancesOfType<T>(ActualValue<T>, Type)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type)
  name.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type)
  fullName: Testify.CollectionAssertions.AllItemsAreInstancesOfType<T>(Testify.ActualValue<T>, System.Type)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreInstancesOfType(Of T)(Testify.ActualValue(Of T), System.Type)
  nameWithType: CollectionAssertions.AllItemsAreInstancesOfType<T>(ActualValue<T>, Type)
  nameWithType.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type)
- uid: Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name: AllItemsAreInstancesOfType<T>(ActualValue<T>, Type, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type, String)
  fullName: Testify.CollectionAssertions.AllItemsAreInstancesOfType<T>(Testify.ActualValue<T>, System.Type, System.String)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreInstancesOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String)
  nameWithType: CollectionAssertions.AllItemsAreInstancesOfType<T>(ActualValue<T>, Type, String)
  nameWithType.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type, String)
- uid: Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name: AllItemsAreInstancesOfType<T>(ActualValue<T>, Type, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreInstancesOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type, String, Object())
  fullName: Testify.CollectionAssertions.AllItemsAreInstancesOfType<T>(Testify.ActualValue<T>, System.Type, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.AllItemsAreInstancesOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String, System.Object())
  nameWithType: CollectionAssertions.AllItemsAreInstancesOfType<T>(ActualValue<T>, Type, String, Object[])
  nameWithType.vb: AllItemsAreInstancesOfType(Of T)(ActualValue(Of T), Type, String, Object())
- uid: Testify.CollectionAssertions.AllItemsAreNotNull*
  name: AllItemsAreNotNull<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.AllItemsAreNotNull
  name.vb: AllItemsAreNotNull(Of T)
  fullName: Testify.CollectionAssertions.AllItemsAreNotNull<T>
  fullName.vb: Testify.CollectionAssertions.AllItemsAreNotNull(Of T)
  nameWithType: CollectionAssertions.AllItemsAreNotNull<T>
  nameWithType.vb: CollectionAssertions.AllItemsAreNotNull(Of T)
- uid: Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0})
  name: AllItemsAreNotNull<T>(ActualValue<T>)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0})
  name.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T))
  fullName: Testify.CollectionAssertions.AllItemsAreNotNull<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreNotNull(Of T)(Testify.ActualValue(Of T))
  nameWithType: CollectionAssertions.AllItemsAreNotNull<T>(ActualValue<T>)
  nameWithType.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T))
- uid: Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0},System.String)
  name: AllItemsAreNotNull<T>(ActualValue<T>, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T), String)
  fullName: Testify.CollectionAssertions.AllItemsAreNotNull<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreNotNull(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: CollectionAssertions.AllItemsAreNotNull<T>(ActualValue<T>, String)
  nameWithType.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T), String)
- uid: Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: AllItemsAreNotNull<T>(ActualValue<T>, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreNotNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.CollectionAssertions.AllItemsAreNotNull<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.AllItemsAreNotNull(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: CollectionAssertions.AllItemsAreNotNull<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: AllItemsAreNotNull(Of T)(ActualValue(Of T), String, Object())
- uid: Testify.CollectionAssertions.AllItemsAreUnique*
  name: AllItemsAreUnique<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.AllItemsAreUnique
  name.vb: AllItemsAreUnique(Of T)
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>
  nameWithType.vb: CollectionAssertions.AllItemsAreUnique(Of T)
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0})
  name: AllItemsAreUnique<T>(ActualValue<T>)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0})
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T))
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T))
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>)
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T))
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer)
  name: AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer)
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer)
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T), System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer)
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer)
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer,System.String)
  name: AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer,System.String)
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T), System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer, String)
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer, String)
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer,System.String,System.Object[])
  name: AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T), System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>, IEqualityComparer, String, Object[])
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.String)
  name: AllItemsAreUnique<T>(ActualValue<T>, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.String)
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), String)
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>, String)
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), String)
- uid: Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: AllItemsAreUnique<T>(ActualValue<T>, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.AllItemsAreUnique``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.CollectionAssertions.AllItemsAreUnique<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.AllItemsAreUnique(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: CollectionAssertions.AllItemsAreUnique<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: AllItemsAreUnique(Of T)(ActualValue(Of T), String, Object())
- uid: Testify.CollectionAssertions.Contains*
  name: Contains<T, TElement>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.Contains
  name.vb: Contains(Of T, TElement)
  fullName: Testify.CollectionAssertions.Contains<T, TElement>
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)
  nameWithType: CollectionAssertions.Contains<T, TElement>
  nameWithType.vb: CollectionAssertions.Contains(Of T, TElement)
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1)
  name: Contains<T, TElement>(ActualValue<T>, TElement)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1)
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement)
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement)
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement)
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement)
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement)
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer)
  name: Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer)
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer)
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer)
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer)
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String)
  name: Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String)
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String)
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String, Object[])
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.String)
  name: Contains<T, TElement>(ActualValue<T>, TElement, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.String)
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, String)
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement, System.String)
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.String)
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement, String)
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, String)
- uid: Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.String,System.Object[])
  name: Contains<T, TElement>(ActualValue<T>, TElement, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.Contains``2(Testify.ActualValue{``0},``1,System.String,System.Object[])
  name.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, String, Object())
  fullName: Testify.CollectionAssertions.Contains<T, TElement>(Testify.ActualValue<T>, TElement, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.Contains(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.String, System.Object())
  nameWithType: CollectionAssertions.Contains<T, TElement>(ActualValue<T>, TElement, String, Object[])
  nameWithType.vb: Contains(Of T, TElement)(ActualValue(Of T), TElement, String, Object())
- uid: Testify.CollectionAssertions.DoesNotContain*
  name: DoesNotContain<T, TElement>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.DoesNotContain
  name.vb: DoesNotContain(Of T, TElement)
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>
  nameWithType.vb: CollectionAssertions.DoesNotContain(Of T, TElement)
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1)
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1)
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement)
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement)
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement)
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement)
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement)
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer)
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer)
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer)
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer)
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer)
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String)
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String)
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String)
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement, IEqualityComparer, String, Object[])
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.String)
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.String)
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, String)
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement, System.String)
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.String)
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement, String)
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, String)
- uid: Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.String,System.Object[])
  name: DoesNotContain<T, TElement>(ActualValue<T>, TElement, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.DoesNotContain``2(Testify.ActualValue{``0},``1,System.String,System.Object[])
  name.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, String, Object())
  fullName: Testify.CollectionAssertions.DoesNotContain<T, TElement>(Testify.ActualValue<T>, TElement, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.DoesNotContain(Of T, TElement)(Testify.ActualValue(Of T), TElement, System.String, System.Object())
  nameWithType: CollectionAssertions.DoesNotContain<T, TElement>(ActualValue<T>, TElement, String, Object[])
  nameWithType.vb: DoesNotContain(Of T, TElement)(ActualValue(Of T), TElement, String, Object())
- uid: Testify.CollectionAssertions.IsEquivalentTo*
  name: IsEquivalentTo<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsEquivalentTo
  name.vb: IsEquivalentTo(Of T)
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)
  nameWithType: CollectionAssertions.IsEquivalentTo<T>
  nameWithType.vb: CollectionAssertions.IsEquivalentTo(Of T)
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsEquivalentTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsEquivalentTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.CollectionAssertions.IsNotEquivalentTo*
  name: IsNotEquivalentTo<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsNotEquivalentTo
  name.vb: IsNotEquivalentTo(Of T)
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>
  nameWithType.vb: CollectionAssertions.IsNotEquivalentTo(Of T)
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotEquivalentTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsNotEquivalentTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotEquivalentTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotEquivalentTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsNotEquivalentTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo*
  name: IsNotSequenceEqualTo<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsNotSequenceEqualTo
  name.vb: IsNotSequenceEqualTo(Of T)
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>
  nameWithType.vb: CollectionAssertions.IsNotSequenceEqualTo(Of T)
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsNotSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsNotSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.CollectionAssertions.IsNotSubsetOf*
  name: IsNotSubsetOf<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsNotSubsetOf
  name.vb: IsNotSubsetOf(Of T)
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>
  nameWithType.vb: CollectionAssertions.IsNotSubsetOf(Of T)
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsNotSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsNotSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsNotSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsNotSubsetOf<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsNotSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.CollectionAssertions.IsSequenceEqualTo*
  name: IsSequenceEqualTo<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsSequenceEqualTo
  name.vb: IsSequenceEqualTo(Of T)
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>
  nameWithType.vb: CollectionAssertions.IsSequenceEqualTo(Of T)
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSequenceEqualTo``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsSequenceEqualTo<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsSequenceEqualTo(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsSequenceEqualTo<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsSequenceEqualTo(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.CollectionAssertions.IsSubsetOf*
  name: IsSubsetOf<T>
  href: api/Testify.CollectionAssertions.html
  commentId: Overload:Testify.CollectionAssertions.IsSubsetOf
  name.vb: IsSubsetOf(Of T)
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)
  nameWithType: CollectionAssertions.IsSubsetOf<T>
  nameWithType.vb: CollectionAssertions.IsSubsetOf(Of T)
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable)
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable)
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable)
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable)
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable)
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable)
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer)
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer)
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer)
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer)
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String)
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String)
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String)
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String)
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.Collections.IEqualityComparer,System.String,System.Object[])
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.Collections.IEqualityComparer, System.String, System.Object())
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable, IEqualityComparer, String, Object[])
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, IEqualityComparer, String, Object())
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable, String)
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String)
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String)
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String)
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String)
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable, String)
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String)
- uid: Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name: IsSubsetOf<T>(ActualValue<T>, IEnumerable, String, Object[])
  href: api/Testify.CollectionAssertions.html
  commentId: M:Testify.CollectionAssertions.IsSubsetOf``1(Testify.ActualValue{``0},System.Collections.IEnumerable,System.String,System.Object[])
  name.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String, Object())
  fullName: Testify.CollectionAssertions.IsSubsetOf<T>(Testify.ActualValue<T>, System.Collections.IEnumerable, System.String, System.Object[])
  fullName.vb: Testify.CollectionAssertions.IsSubsetOf(Of T)(Testify.ActualValue(Of T), System.Collections.IEnumerable, System.String, System.Object())
  nameWithType: CollectionAssertions.IsSubsetOf<T>(ActualValue<T>, IEnumerable, String, Object[])
  nameWithType.vb: IsSubsetOf(Of T)(ActualValue(Of T), IEnumerable, String, Object())
- uid: Testify.ComparableVerifier`1
  name: ComparableVerifier<T>
  href: api/Testify.ComparableVerifier-1.html
  commentId: T:Testify.ComparableVerifier`1
  name.vb: ComparableVerifier(Of T)
  fullName: Testify.ComparableVerifier<T>
  fullName.vb: Testify.ComparableVerifier(Of T)
  nameWithType: ComparableVerifier<T>
  nameWithType.vb: ComparableVerifier(Of T)
- uid: Testify.ComparableVerifier`1.GetMethods
  name: GetMethods()
  href: api/Testify.ComparableVerifier-1.html
  commentId: M:Testify.ComparableVerifier`1.GetMethods
  fullName: Testify.ComparableVerifier<T>.GetMethods()
  fullName.vb: Testify.ComparableVerifier(Of T).GetMethods()
  nameWithType: ComparableVerifier<T>.GetMethods()
- uid: Testify.ComparableVerifier`1.GetMethods*
  name: GetMethods
  href: api/Testify.ComparableVerifier-1.html
  commentId: Overload:Testify.ComparableVerifier`1.GetMethods
  fullName: Testify.ComparableVerifier.GetMethods
  nameWithType: ComparableVerifier.GetMethods
- uid: Testify.ComparableVerifier`1.GetTests
  name: GetTests()
  href: api/Testify.ComparableVerifier-1.html
  commentId: M:Testify.ComparableVerifier`1.GetTests
  fullName: Testify.ComparableVerifier<T>.GetTests()
  fullName.vb: Testify.ComparableVerifier(Of T).GetTests()
  nameWithType: ComparableVerifier<T>.GetTests()
- uid: Testify.ComparableVerifier`1.GetTests*
  name: GetTests
  href: api/Testify.ComparableVerifier-1.html
  commentId: Overload:Testify.ComparableVerifier`1.GetTests
  fullName: Testify.ComparableVerifier.GetTests
  nameWithType: ComparableVerifier.GetTests
- uid: Testify.ComparableVerifier`1.ItemsFactoryPropertyName
  name: ItemsFactoryPropertyName
  href: api/Testify.ComparableVerifier-1.html
  commentId: P:Testify.ComparableVerifier`1.ItemsFactoryPropertyName
  fullName: Testify.ComparableVerifier<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.ComparableVerifier(Of T).ItemsFactoryPropertyName
  nameWithType: ComparableVerifier<T>.ItemsFactoryPropertyName
- uid: Testify.ComparableVerifier`1.ItemsFactoryPropertyName*
  name: ItemsFactoryPropertyName
  href: api/Testify.ComparableVerifier-1.html
  commentId: Overload:Testify.ComparableVerifier`1.ItemsFactoryPropertyName
  fullName: Testify.ComparableVerifier<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.ComparableVerifier(Of T).ItemsFactoryPropertyName
  nameWithType: ComparableVerifier<T>.ItemsFactoryPropertyName
  nameWithType.vb: ComparableVerifier(Of T).ItemsFactoryPropertyName
- uid: Testify.ComparableVerifier`1.OrderedItemsFactory
  name: OrderedItemsFactory
  href: api/Testify.ComparableVerifier-1.html
  commentId: P:Testify.ComparableVerifier`1.OrderedItemsFactory
  fullName: Testify.ComparableVerifier<T>.OrderedItemsFactory
  fullName.vb: Testify.ComparableVerifier(Of T).OrderedItemsFactory
  nameWithType: ComparableVerifier<T>.OrderedItemsFactory
- uid: Testify.ComparableVerifier`1.OrderedItemsFactory*
  name: OrderedItemsFactory
  href: api/Testify.ComparableVerifier-1.html
  commentId: Overload:Testify.ComparableVerifier`1.OrderedItemsFactory
  fullName: Testify.ComparableVerifier<T>.OrderedItemsFactory
  fullName.vb: Testify.ComparableVerifier(Of T).OrderedItemsFactory
  nameWithType: ComparableVerifier<T>.OrderedItemsFactory
  nameWithType.vb: ComparableVerifier(Of T).OrderedItemsFactory
- uid: Testify.ComparisonVerifierBase`1
  name: ComparisonVerifierBase<T>
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: T:Testify.ComparisonVerifierBase`1
  name.vb: ComparisonVerifierBase(Of T)
  fullName: Testify.ComparisonVerifierBase<T>
  fullName.vb: Testify.ComparisonVerifierBase(Of T)
  nameWithType: ComparisonVerifierBase<T>
  nameWithType.vb: ComparisonVerifierBase(Of T)
- uid: Testify.ComparisonVerifierBase`1.#ctor
  name: ComparisonVerifierBase()
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: M:Testify.ComparisonVerifierBase`1.#ctor
  fullName: Testify.ComparisonVerifierBase<T>.ComparisonVerifierBase()
  fullName.vb: Testify.ComparisonVerifierBase(Of T).ComparisonVerifierBase()
  nameWithType: ComparisonVerifierBase<T>.ComparisonVerifierBase()
- uid: Testify.ComparisonVerifierBase`1.#ctor*
  name: ComparisonVerifierBase
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.#ctor
  fullName: Testify.ComparisonVerifierBase.ComparisonVerifierBase
  nameWithType: ComparisonVerifierBase.ComparisonVerifierBase
- uid: Testify.ComparisonVerifierBase`1.BaseItems
  name: BaseItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.BaseItems
  fullName: Testify.ComparisonVerifierBase<T>.BaseItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).BaseItems
  nameWithType: ComparisonVerifierBase<T>.BaseItems
- uid: Testify.ComparisonVerifierBase`1.BaseItems*
  name: BaseItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.BaseItems
  fullName: Testify.ComparisonVerifierBase<T>.BaseItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).BaseItems
  nameWithType: ComparisonVerifierBase<T>.BaseItems
  nameWithType.vb: ComparisonVerifierBase(Of T).BaseItems
- uid: Testify.ComparisonVerifierBase`1.CompareItems(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0},System.Func{`0,`0,System.Boolean})
  name: CompareItems(IEnumerable<T>, IEnumerable<T>, Func<T, T, Boolean>)
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: M:Testify.ComparisonVerifierBase`1.CompareItems(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0},System.Func{`0,`0,System.Boolean})
  name.vb: CompareItems(IEnumerable(Of T), IEnumerable(Of T), Func(Of T, T, Boolean))
  fullName: Testify.ComparisonVerifierBase<T>.CompareItems(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, System.Func<T, T, System.Boolean>)
  fullName.vb: Testify.ComparisonVerifierBase(Of T).CompareItems(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, T, System.Boolean))
  nameWithType: ComparisonVerifierBase<T>.CompareItems(IEnumerable<T>, IEnumerable<T>, Func<T, T, Boolean>)
  nameWithType.vb: CompareItems(IEnumerable(Of T), IEnumerable(Of T), Func(Of T, T, Boolean))
- uid: Testify.ComparisonVerifierBase`1.CompareItems*
  name: CompareItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.CompareItems
  fullName: Testify.ComparisonVerifierBase.CompareItems
  nameWithType: ComparisonVerifierBase.CompareItems
- uid: Testify.ComparisonVerifierBase`1.EqualItems
  name: EqualItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.EqualItems
  fullName: Testify.ComparisonVerifierBase<T>.EqualItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).EqualItems
  nameWithType: ComparisonVerifierBase<T>.EqualItems
- uid: Testify.ComparisonVerifierBase`1.EqualItems*
  name: EqualItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.EqualItems
  fullName: Testify.ComparisonVerifierBase<T>.EqualItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).EqualItems
  nameWithType: ComparisonVerifierBase<T>.EqualItems
  nameWithType.vb: ComparisonVerifierBase(Of T).EqualItems
- uid: Testify.ComparisonVerifierBase`1.GetMethods
  name: GetMethods()
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: M:Testify.ComparisonVerifierBase`1.GetMethods
  fullName: Testify.ComparisonVerifierBase<T>.GetMethods()
  fullName.vb: Testify.ComparisonVerifierBase(Of T).GetMethods()
  nameWithType: ComparisonVerifierBase<T>.GetMethods()
- uid: Testify.ComparisonVerifierBase`1.GetMethods*
  name: GetMethods
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.GetMethods
  fullName: Testify.ComparisonVerifierBase.GetMethods
  nameWithType: ComparisonVerifierBase.GetMethods
- uid: Testify.ComparisonVerifierBase`1.GetTests
  name: GetTests()
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: M:Testify.ComparisonVerifierBase`1.GetTests
  fullName: Testify.ComparisonVerifierBase<T>.GetTests()
  fullName.vb: Testify.ComparisonVerifierBase(Of T).GetTests()
  nameWithType: ComparisonVerifierBase<T>.GetTests()
- uid: Testify.ComparisonVerifierBase`1.GetTests*
  name: GetTests
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.GetTests
  fullName: Testify.ComparisonVerifierBase.GetTests
  nameWithType: ComparisonVerifierBase.GetTests
- uid: Testify.ComparisonVerifierBase`1.IsPrimitive
  name: IsPrimitive
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.IsPrimitive
  fullName: Testify.ComparisonVerifierBase<T>.IsPrimitive
  fullName.vb: Testify.ComparisonVerifierBase(Of T).IsPrimitive
  nameWithType: ComparisonVerifierBase<T>.IsPrimitive
- uid: Testify.ComparisonVerifierBase`1.IsPrimitive*
  name: IsPrimitive
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.IsPrimitive
  fullName: Testify.ComparisonVerifierBase<T>.IsPrimitive
  fullName.vb: Testify.ComparisonVerifierBase(Of T).IsPrimitive
  nameWithType: ComparisonVerifierBase<T>.IsPrimitive
  nameWithType.vb: ComparisonVerifierBase(Of T).IsPrimitive
- uid: Testify.ComparisonVerifierBase`1.ItemsFactory
  name: ItemsFactory
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.ItemsFactory
  fullName: Testify.ComparisonVerifierBase<T>.ItemsFactory
  fullName.vb: Testify.ComparisonVerifierBase(Of T).ItemsFactory
  nameWithType: ComparisonVerifierBase<T>.ItemsFactory
- uid: Testify.ComparisonVerifierBase`1.ItemsFactory*
  name: ItemsFactory
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.ItemsFactory
  fullName: Testify.ComparisonVerifierBase<T>.ItemsFactory
  fullName.vb: Testify.ComparisonVerifierBase(Of T).ItemsFactory
  nameWithType: ComparisonVerifierBase<T>.ItemsFactory
  nameWithType.vb: ComparisonVerifierBase(Of T).ItemsFactory
- uid: Testify.ComparisonVerifierBase`1.ItemsFactoryPropertyName
  name: ItemsFactoryPropertyName
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.ItemsFactoryPropertyName
  fullName: Testify.ComparisonVerifierBase<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.ComparisonVerifierBase(Of T).ItemsFactoryPropertyName
  nameWithType: ComparisonVerifierBase<T>.ItemsFactoryPropertyName
- uid: Testify.ComparisonVerifierBase`1.ItemsFactoryPropertyName*
  name: ItemsFactoryPropertyName
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.ItemsFactoryPropertyName
  fullName: Testify.ComparisonVerifierBase<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.ComparisonVerifierBase(Of T).ItemsFactoryPropertyName
  nameWithType: ComparisonVerifierBase<T>.ItemsFactoryPropertyName
  nameWithType.vb: ComparisonVerifierBase(Of T).ItemsFactoryPropertyName
- uid: Testify.ComparisonVerifierBase`1.NotEqualItems
  name: NotEqualItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: P:Testify.ComparisonVerifierBase`1.NotEqualItems
  fullName: Testify.ComparisonVerifierBase<T>.NotEqualItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).NotEqualItems
  nameWithType: ComparisonVerifierBase<T>.NotEqualItems
- uid: Testify.ComparisonVerifierBase`1.NotEqualItems*
  name: NotEqualItems
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.NotEqualItems
  fullName: Testify.ComparisonVerifierBase<T>.NotEqualItems
  fullName.vb: Testify.ComparisonVerifierBase(Of T).NotEqualItems
  nameWithType: ComparisonVerifierBase<T>.NotEqualItems
  nameWithType.vb: ComparisonVerifierBase(Of T).NotEqualItems
- uid: Testify.ComparisonVerifierBase`1.VerifyConfiguration
  name: VerifyConfiguration()
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: M:Testify.ComparisonVerifierBase`1.VerifyConfiguration
  fullName: Testify.ComparisonVerifierBase<T>.VerifyConfiguration()
  fullName.vb: Testify.ComparisonVerifierBase(Of T).VerifyConfiguration()
  nameWithType: ComparisonVerifierBase<T>.VerifyConfiguration()
- uid: Testify.ComparisonVerifierBase`1.VerifyConfiguration*
  name: VerifyConfiguration
  href: api/Testify.ComparisonVerifierBase-1.html
  commentId: Overload:Testify.ComparisonVerifierBase`1.VerifyConfiguration
  fullName: Testify.ComparisonVerifierBase.VerifyConfiguration
  nameWithType: ComparisonVerifierBase.VerifyConfiguration
- uid: Testify.ContractVerifier
  name: ContractVerifier
  href: api/Testify.ContractVerifier.html
  commentId: T:Testify.ContractVerifier
  fullName: Testify.ContractVerifier
  nameWithType: ContractVerifier
- uid: Testify.ContractVerifier.GetTests
  name: GetTests()
  href: api/Testify.ContractVerifier.html
  commentId: M:Testify.ContractVerifier.GetTests
  fullName: Testify.ContractVerifier.GetTests()
  nameWithType: ContractVerifier.GetTests()
- uid: Testify.ContractVerifier.GetTests*
  name: GetTests
  href: api/Testify.ContractVerifier.html
  commentId: Overload:Testify.ContractVerifier.GetTests
  fullName: Testify.ContractVerifier.GetTests
  nameWithType: ContractVerifier.GetTests
- uid: Testify.ContractVerifier.Verify
  name: Verify()
  href: api/Testify.ContractVerifier.html
  commentId: M:Testify.ContractVerifier.Verify
  fullName: Testify.ContractVerifier.Verify()
  nameWithType: ContractVerifier.Verify()
- uid: Testify.ContractVerifier.Verify*
  name: Verify
  href: api/Testify.ContractVerifier.html
  commentId: Overload:Testify.ContractVerifier.Verify
  fullName: Testify.ContractVerifier.Verify
  nameWithType: ContractVerifier.Verify
- uid: Testify.ContractVerifier.VerifyConfiguration
  name: VerifyConfiguration()
  href: api/Testify.ContractVerifier.html
  commentId: M:Testify.ContractVerifier.VerifyConfiguration
  fullName: Testify.ContractVerifier.VerifyConfiguration()
  nameWithType: ContractVerifier.VerifyConfiguration()
- uid: Testify.ContractVerifier.VerifyConfiguration*
  name: VerifyConfiguration
  href: api/Testify.ContractVerifier.html
  commentId: Overload:Testify.ContractVerifier.VerifyConfiguration
  fullName: Testify.ContractVerifier.VerifyConfiguration
  nameWithType: ContractVerifier.VerifyConfiguration
- uid: Testify.Distribution
  name: Distribution
  href: api/Testify.Distribution.html
  commentId: T:Testify.Distribution
  fullName: Testify.Distribution
  nameWithType: Distribution
- uid: Testify.Distribution.#ctor
  name: Distribution()
  href: api/Testify.Distribution.html
  commentId: M:Testify.Distribution.#ctor
  fullName: Testify.Distribution.Distribution()
  nameWithType: Distribution.Distribution()
- uid: Testify.Distribution.#ctor*
  name: Distribution
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.#ctor
  fullName: Testify.Distribution.Distribution
  nameWithType: Distribution.Distribution
- uid: Testify.Distribution.InvertedNormal
  name: InvertedNormal
  href: api/Testify.Distribution.html
  commentId: P:Testify.Distribution.InvertedNormal
  fullName: Testify.Distribution.InvertedNormal
  nameWithType: Distribution.InvertedNormal
- uid: Testify.Distribution.InvertedNormal*
  name: InvertedNormal
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.InvertedNormal
  fullName: Testify.Distribution.InvertedNormal
  nameWithType: Distribution.InvertedNormal
- uid: Testify.Distribution.NegativeNormal
  name: NegativeNormal
  href: api/Testify.Distribution.html
  commentId: P:Testify.Distribution.NegativeNormal
  fullName: Testify.Distribution.NegativeNormal
  nameWithType: Distribution.NegativeNormal
- uid: Testify.Distribution.NegativeNormal*
  name: NegativeNormal
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.NegativeNormal
  fullName: Testify.Distribution.NegativeNormal
  nameWithType: Distribution.NegativeNormal
- uid: Testify.Distribution.NextDouble(System.Random)
  name: NextDouble(Random)
  href: api/Testify.Distribution.html
  commentId: M:Testify.Distribution.NextDouble(System.Random)
  fullName: Testify.Distribution.NextDouble(System.Random)
  nameWithType: Distribution.NextDouble(Random)
- uid: Testify.Distribution.NextDouble*
  name: NextDouble
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.NextDouble
  fullName: Testify.Distribution.NextDouble
  nameWithType: Distribution.NextDouble
- uid: Testify.Distribution.NextGausian(System.Random)
  name: NextGausian(Random)
  href: api/Testify.Distribution.html
  commentId: M:Testify.Distribution.NextGausian(System.Random)
  fullName: Testify.Distribution.NextGausian(System.Random)
  nameWithType: Distribution.NextGausian(Random)
- uid: Testify.Distribution.NextGausian(System.Random,System.Int32)
  name: NextGausian(Random, Int32)
  href: api/Testify.Distribution.html
  commentId: M:Testify.Distribution.NextGausian(System.Random,System.Int32)
  fullName: Testify.Distribution.NextGausian(System.Random, System.Int32)
  nameWithType: Distribution.NextGausian(Random, Int32)
- uid: Testify.Distribution.NextGausian*
  name: NextGausian
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.NextGausian
  fullName: Testify.Distribution.NextGausian
  nameWithType: Distribution.NextGausian
- uid: Testify.Distribution.PositiveNormal
  name: PositiveNormal
  href: api/Testify.Distribution.html
  commentId: P:Testify.Distribution.PositiveNormal
  fullName: Testify.Distribution.PositiveNormal
  nameWithType: Distribution.PositiveNormal
- uid: Testify.Distribution.PositiveNormal*
  name: PositiveNormal
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.PositiveNormal
  fullName: Testify.Distribution.PositiveNormal
  nameWithType: Distribution.PositiveNormal
- uid: Testify.Distribution.Uniform
  name: Uniform
  href: api/Testify.Distribution.html
  commentId: P:Testify.Distribution.Uniform
  fullName: Testify.Distribution.Uniform
  nameWithType: Distribution.Uniform
- uid: Testify.Distribution.Uniform*
  name: Uniform
  href: api/Testify.Distribution.html
  commentId: Overload:Testify.Distribution.Uniform
  fullName: Testify.Distribution.Uniform
  nameWithType: Distribution.Uniform
- uid: Testify.EquatableVerifier`1
  name: EquatableVerifier<T>
  href: api/Testify.EquatableVerifier-1.html
  commentId: T:Testify.EquatableVerifier`1
  name.vb: EquatableVerifier(Of T)
  fullName: Testify.EquatableVerifier<T>
  fullName.vb: Testify.EquatableVerifier(Of T)
  nameWithType: EquatableVerifier<T>
  nameWithType.vb: EquatableVerifier(Of T)
- uid: Testify.EquatableVerifier`1.ItemsFactoryPropertyName
  name: ItemsFactoryPropertyName
  href: api/Testify.EquatableVerifier-1.html
  commentId: P:Testify.EquatableVerifier`1.ItemsFactoryPropertyName
  fullName: Testify.EquatableVerifier<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.EquatableVerifier(Of T).ItemsFactoryPropertyName
  nameWithType: EquatableVerifier<T>.ItemsFactoryPropertyName
- uid: Testify.EquatableVerifier`1.ItemsFactoryPropertyName*
  name: ItemsFactoryPropertyName
  href: api/Testify.EquatableVerifier-1.html
  commentId: Overload:Testify.EquatableVerifier`1.ItemsFactoryPropertyName
  fullName: Testify.EquatableVerifier<T>.ItemsFactoryPropertyName
  fullName.vb: Testify.EquatableVerifier(Of T).ItemsFactoryPropertyName
  nameWithType: EquatableVerifier<T>.ItemsFactoryPropertyName
  nameWithType.vb: EquatableVerifier(Of T).ItemsFactoryPropertyName
- uid: Testify.EquatableVerifier`1.UniqueItemsFactory
  name: UniqueItemsFactory
  href: api/Testify.EquatableVerifier-1.html
  commentId: P:Testify.EquatableVerifier`1.UniqueItemsFactory
  fullName: Testify.EquatableVerifier<T>.UniqueItemsFactory
  fullName.vb: Testify.EquatableVerifier(Of T).UniqueItemsFactory
  nameWithType: EquatableVerifier<T>.UniqueItemsFactory
- uid: Testify.EquatableVerifier`1.UniqueItemsFactory*
  name: UniqueItemsFactory
  href: api/Testify.EquatableVerifier-1.html
  commentId: Overload:Testify.EquatableVerifier`1.UniqueItemsFactory
  fullName: Testify.EquatableVerifier<T>.UniqueItemsFactory
  fullName.vb: Testify.EquatableVerifier(Of T).UniqueItemsFactory
  nameWithType: EquatableVerifier<T>.UniqueItemsFactory
  nameWithType.vb: EquatableVerifier(Of T).UniqueItemsFactory
- uid: Testify.ExceptionAssertions
  name: ExceptionAssertions
  href: api/Testify.ExceptionAssertions.html
  commentId: T:Testify.ExceptionAssertions
  fullName: Testify.ExceptionAssertions
  nameWithType: ExceptionAssertions
- uid: Testify.ExceptionAssertions.Throws*
  name: Throws<T>
  href: api/Testify.ExceptionAssertions.html
  commentId: Overload:Testify.ExceptionAssertions.Throws
  name.vb: Throws(Of T)
  fullName: Testify.ExceptionAssertions.Throws<T>
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)
  nameWithType: ExceptionAssertions.Throws<T>
  nameWithType.vb: ExceptionAssertions.Throws(Of T)
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action})
  name: Throws<T>(ActualValue<Action>)
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action})
  name.vb: Throws(Of T)(ActualValue(Of Action))
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>)
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action))
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>)
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action))
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0})
  name: Throws<T>(ActualValue<Action>, Action<T>)
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0})
  name.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T))
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>, System.Action<T>)
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action), System.Action(Of T))
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>, Action<T>)
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T))
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0},System.String)
  name: Throws<T>(ActualValue<Action>, Action<T>, String)
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0},System.String)
  name.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T), String)
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>, System.Action<T>, System.String)
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action), System.Action(Of T), System.String)
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>, Action<T>, String)
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T), String)
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0},System.String,System.Object[])
  name: Throws<T>(ActualValue<Action>, Action<T>, String, Object[])
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.Action{``0},System.String,System.Object[])
  name.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T), String, Object())
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>, System.Action<T>, System.String, System.Object[])
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action), System.Action(Of T), System.String, System.Object())
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>, Action<T>, String, Object[])
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action), Action(Of T), String, Object())
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.String)
  name: Throws<T>(ActualValue<Action>, String)
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.String)
  name.vb: Throws(Of T)(ActualValue(Of Action), String)
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>, System.String)
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action), System.String)
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>, String)
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action), String)
- uid: Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.String,System.Object[])
  name: Throws<T>(ActualValue<Action>, String, Object[])
  href: api/Testify.ExceptionAssertions.html
  commentId: M:Testify.ExceptionAssertions.Throws``1(Testify.ActualValue{System.Action},System.String,System.Object[])
  name.vb: Throws(Of T)(ActualValue(Of Action), String, Object())
  fullName: Testify.ExceptionAssertions.Throws<T>(Testify.ActualValue<System.Action>, System.String, System.Object[])
  fullName.vb: Testify.ExceptionAssertions.Throws(Of T)(Testify.ActualValue(Of System.Action), System.String, System.Object())
  nameWithType: ExceptionAssertions.Throws<T>(ActualValue<Action>, String, Object[])
  nameWithType.vb: Throws(Of T)(ActualValue(Of Action), String, Object())
- uid: Testify.IAnonymousData
  name: IAnonymousData
  href: api/Testify.IAnonymousData.html
  commentId: T:Testify.IAnonymousData
  fullName: Testify.IAnonymousData
  nameWithType: IAnonymousData
- uid: Testify.IAnonymousData.Any(System.Type,Testify.PopulateOption)
  name: Any(Type, PopulateOption)
  href: api/Testify.IAnonymousData.html
  commentId: M:Testify.IAnonymousData.Any(System.Type,Testify.PopulateOption)
  fullName: Testify.IAnonymousData.Any(System.Type, Testify.PopulateOption)
  nameWithType: IAnonymousData.Any(Type, PopulateOption)
- uid: Testify.IAnonymousData.Any*
  name: Any
  href: api/Testify.IAnonymousData.html
  commentId: Overload:Testify.IAnonymousData.Any
  fullName: Testify.IAnonymousData.Any
  nameWithType: IAnonymousData.Any
- uid: Testify.IAnonymousData.AnyDouble(System.Double,System.Double,Testify.Distribution)
  name: AnyDouble(Double, Double, Distribution)
  href: api/Testify.IAnonymousData.html
  commentId: M:Testify.IAnonymousData.AnyDouble(System.Double,System.Double,Testify.Distribution)
  fullName: Testify.IAnonymousData.AnyDouble(System.Double, System.Double, Testify.Distribution)
  nameWithType: IAnonymousData.AnyDouble(Double, Double, Distribution)
- uid: Testify.IAnonymousData.AnyDouble*
  name: AnyDouble
  href: api/Testify.IAnonymousData.html
  commentId: Overload:Testify.IAnonymousData.AnyDouble
  fullName: Testify.IAnonymousData.AnyDouble
  nameWithType: IAnonymousData.AnyDouble
- uid: Testify.IAnonymousData.Populate*
  name: Populate<TInstance>
  href: api/Testify.IAnonymousData.html
  commentId: Overload:Testify.IAnonymousData.Populate
  name.vb: Populate(Of TInstance)
  fullName: Testify.IAnonymousData.Populate<TInstance>
  fullName.vb: Testify.IAnonymousData.Populate(Of TInstance)
  nameWithType: IAnonymousData.Populate<TInstance>
  nameWithType.vb: IAnonymousData.Populate(Of TInstance)
- uid: Testify.IAnonymousData.Populate``1(``0,System.Boolean)
  name: Populate<TInstance>(TInstance, Boolean)
  href: api/Testify.IAnonymousData.html
  commentId: M:Testify.IAnonymousData.Populate``1(``0,System.Boolean)
  name.vb: Populate(Of TInstance)(TInstance, Boolean)
  fullName: Testify.IAnonymousData.Populate<TInstance>(TInstance, System.Boolean)
  fullName.vb: Testify.IAnonymousData.Populate(Of TInstance)(TInstance, System.Boolean)
  nameWithType: IAnonymousData.Populate<TInstance>(TInstance, Boolean)
  nameWithType.vb: Populate(Of TInstance)(TInstance, Boolean)
- uid: Testify.IAnonymousDataContext
  name: IAnonymousDataContext
  href: api/Testify.IAnonymousDataContext.html
  commentId: T:Testify.IAnonymousDataContext
  fullName: Testify.IAnonymousDataContext
  nameWithType: IAnonymousDataContext
- uid: Testify.IAnonymousDataContext.CallNextCustomization(System.Object@)
  name: CallNextCustomization(out Object)
  href: api/Testify.IAnonymousDataContext.html
  commentId: M:Testify.IAnonymousDataContext.CallNextCustomization(System.Object@)
  name.vb: CallNextCustomization(ByRef Object)
  fullName: Testify.IAnonymousDataContext.CallNextCustomization(out System.Object)
  fullName.vb: Testify.IAnonymousDataContext.CallNextCustomization(ByRef System.Object)
  nameWithType: IAnonymousDataContext.CallNextCustomization(out Object)
  nameWithType.vb: CallNextCustomization(ByRef Object)
- uid: Testify.IAnonymousDataContext.CallNextCustomization*
  name: CallNextCustomization
  href: api/Testify.IAnonymousDataContext.html
  commentId: Overload:Testify.IAnonymousDataContext.CallNextCustomization
  fullName: Testify.IAnonymousDataContext.CallNextCustomization
  nameWithType: IAnonymousDataContext.CallNextCustomization
- uid: Testify.IAnonymousDataContext.ResultType
  name: ResultType
  href: api/Testify.IAnonymousDataContext.html
  commentId: P:Testify.IAnonymousDataContext.ResultType
  fullName: Testify.IAnonymousDataContext.ResultType
  nameWithType: IAnonymousDataContext.ResultType
- uid: Testify.IAnonymousDataContext.ResultType*
  name: ResultType
  href: api/Testify.IAnonymousDataContext.html
  commentId: Overload:Testify.IAnonymousDataContext.ResultType
  fullName: Testify.IAnonymousDataContext.ResultType
  nameWithType: IAnonymousDataContext.ResultType
- uid: Testify.IAnonymousDataCustomization
  name: IAnonymousDataCustomization
  href: api/Testify.IAnonymousDataCustomization.html
  commentId: T:Testify.IAnonymousDataCustomization
  fullName: Testify.IAnonymousDataCustomization
  nameWithType: IAnonymousDataCustomization
- uid: Testify.IAnonymousDataCustomization.Create(Testify.IAnonymousDataContext,System.Object@)
  name: Create(IAnonymousDataContext, out Object)
  href: api/Testify.IAnonymousDataCustomization.html
  commentId: M:Testify.IAnonymousDataCustomization.Create(Testify.IAnonymousDataContext,System.Object@)
  name.vb: Create(IAnonymousDataContext, ByRef Object)
  fullName: Testify.IAnonymousDataCustomization.Create(Testify.IAnonymousDataContext, out System.Object)
  fullName.vb: Testify.IAnonymousDataCustomization.Create(Testify.IAnonymousDataContext, ByRef System.Object)
  nameWithType: IAnonymousDataCustomization.Create(IAnonymousDataContext, out Object)
  nameWithType.vb: Create(IAnonymousDataContext, ByRef Object)
- uid: Testify.IAnonymousDataCustomization.Create*
  name: Create
  href: api/Testify.IAnonymousDataCustomization.html
  commentId: Overload:Testify.IAnonymousDataCustomization.Create
  fullName: Testify.IAnonymousDataCustomization.Create
  nameWithType: IAnonymousDataCustomization.Create
- uid: Testify.IRegisterAnonymousData
  name: IRegisterAnonymousData
  href: api/Testify.IRegisterAnonymousData.html
  commentId: T:Testify.IRegisterAnonymousData
  fullName: Testify.IRegisterAnonymousData
  nameWithType: IRegisterAnonymousData
- uid: Testify.IRegisterAnonymousData.Register(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name: Register(PropertyInfo, Func<IAnonymousData, Object>)
  href: api/Testify.IRegisterAnonymousData.html
  commentId: M:Testify.IRegisterAnonymousData.Register(System.Reflection.PropertyInfo,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: Register(PropertyInfo, Func(Of IAnonymousData, Object))
  fullName: Testify.IRegisterAnonymousData.Register(System.Reflection.PropertyInfo, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.IRegisterAnonymousData.Register(System.Reflection.PropertyInfo, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: IRegisterAnonymousData.Register(PropertyInfo, Func<IAnonymousData, Object>)
  nameWithType.vb: Register(PropertyInfo, Func(Of IAnonymousData, Object))
- uid: Testify.IRegisterAnonymousData.Register(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name: Register(Type, Func<IAnonymousData, Object>)
  href: api/Testify.IRegisterAnonymousData.html
  commentId: M:Testify.IRegisterAnonymousData.Register(System.Type,System.Func{Testify.IAnonymousData,System.Object})
  name.vb: Register(Type, Func(Of IAnonymousData, Object))
  fullName: Testify.IRegisterAnonymousData.Register(System.Type, System.Func<Testify.IAnonymousData, System.Object>)
  fullName.vb: Testify.IRegisterAnonymousData.Register(System.Type, System.Func(Of Testify.IAnonymousData, System.Object))
  nameWithType: IRegisterAnonymousData.Register(Type, Func<IAnonymousData, Object>)
  nameWithType.vb: Register(Type, Func(Of IAnonymousData, Object))
- uid: Testify.IRegisterAnonymousData.Register*
  name: Register
  href: api/Testify.IRegisterAnonymousData.html
  commentId: Overload:Testify.IRegisterAnonymousData.Register
  fullName: Testify.IRegisterAnonymousData.Register
  nameWithType: IRegisterAnonymousData.Register
- uid: Testify.MoqCustomization
  name: MoqCustomization
  href: api/Testify.MoqCustomization.html
  commentId: T:Testify.MoqCustomization
  fullName: Testify.MoqCustomization
  nameWithType: MoqCustomization
- uid: Testify.MoqCustomization.Create(Testify.IAnonymousDataContext,System.Object@)
  name: Create(IAnonymousDataContext, out Object)
  href: api/Testify.MoqCustomization.html
  commentId: M:Testify.MoqCustomization.Create(Testify.IAnonymousDataContext,System.Object@)
  name.vb: Create(IAnonymousDataContext, ByRef Object)
  fullName: Testify.MoqCustomization.Create(Testify.IAnonymousDataContext, out System.Object)
  fullName.vb: Testify.MoqCustomization.Create(Testify.IAnonymousDataContext, ByRef System.Object)
  nameWithType: MoqCustomization.Create(IAnonymousDataContext, out Object)
  nameWithType.vb: Create(IAnonymousDataContext, ByRef Object)
- uid: Testify.MoqCustomization.Create*
  name: Create
  href: api/Testify.MoqCustomization.html
  commentId: Overload:Testify.MoqCustomization.Create
  fullName: Testify.MoqCustomization.Create
  nameWithType: MoqCustomization.Create
- uid: Testify.PopulateOption
  name: PopulateOption
  href: api/Testify.PopulateOption.html
  commentId: T:Testify.PopulateOption
  fullName: Testify.PopulateOption
  nameWithType: PopulateOption
- uid: Testify.PopulateOption.Deep
  name: Deep
  href: api/Testify.PopulateOption.html
  commentId: F:Testify.PopulateOption.Deep
  fullName: Testify.PopulateOption.Deep
  nameWithType: PopulateOption.Deep
- uid: Testify.PopulateOption.None
  name: None
  href: api/Testify.PopulateOption.html
  commentId: F:Testify.PopulateOption.None
  fullName: Testify.PopulateOption.None
  nameWithType: PopulateOption.None
- uid: Testify.PopulateOption.Shallow
  name: Shallow
  href: api/Testify.PopulateOption.html
  commentId: F:Testify.PopulateOption.Shallow
  fullName: Testify.PopulateOption.Shallow
  nameWithType: PopulateOption.Shallow
- uid: Testify.StandardAssertions
  name: StandardAssertions
  href: api/Testify.StandardAssertions.html
  commentId: T:Testify.StandardAssertions
  fullName: Testify.StandardAssertions
  nameWithType: StandardAssertions
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double)
  name: IsEqualTo(ActualValue<Double>, Double, Double)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double)
  name.vb: IsEqualTo(ActualValue(Of Double), Double, Double)
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double)
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Double>, Double, Double)
  nameWithType.vb: IsEqualTo(ActualValue(Of Double), Double, Double)
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String)
  name: IsEqualTo(ActualValue<Double>, Double, Double, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String)
  name.vb: IsEqualTo(ActualValue(Of Double), Double, Double, String)
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double, System.String)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double, System.String)
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Double>, Double, Double, String)
  nameWithType.vb: IsEqualTo(ActualValue(Of Double), Double, Double, String)
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String,System.Object[])
  name: IsEqualTo(ActualValue<Double>, Double, Double, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String,System.Object[])
  name.vb: IsEqualTo(ActualValue(Of Double), Double, Double, String, Object())
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double, System.String, System.Object())
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Double>, Double, Double, String, Object[])
  nameWithType.vb: IsEqualTo(ActualValue(Of Double), Double, Double, String, Object())
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single)
  name: IsEqualTo(ActualValue<Single>, Single, Single)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single)
  name.vb: IsEqualTo(ActualValue(Of Single), Single, Single)
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single)
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Single>, Single, Single)
  nameWithType.vb: IsEqualTo(ActualValue(Of Single), Single, Single)
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String)
  name: IsEqualTo(ActualValue<Single>, Single, Single, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String)
  name.vb: IsEqualTo(ActualValue(Of Single), Single, Single, String)
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single, System.String)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single, System.String)
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Single>, Single, Single, String)
  nameWithType.vb: IsEqualTo(ActualValue(Of Single), Single, Single, String)
- uid: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String,System.Object[])
  name: IsEqualTo(ActualValue<Single>, Single, Single, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String,System.Object[])
  name.vb: IsEqualTo(ActualValue(Of Single), Single, Single, String, Object())
  fullName: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single, System.String, System.Object())
  nameWithType: StandardAssertions.IsEqualTo(ActualValue<Single>, Single, Single, String, Object[])
  nameWithType.vb: IsEqualTo(ActualValue(Of Single), Single, Single, String, Object())
- uid: Testify.StandardAssertions.IsEqualTo*
  name: IsEqualTo
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsEqualTo
  fullName: Testify.StandardAssertions.IsEqualTo
  nameWithType: StandardAssertions.IsEqualTo
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0)
  name: IsEqualTo<T>(ActualValue<T>, T)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0)
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), T)
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, T)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), T)
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, T)
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), T)
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0,System.String)
  name: IsEqualTo<T>(ActualValue<T>, T, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0,System.String)
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), T, String)
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, T, System.String)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), T, System.String)
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, T, String)
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), T, String)
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name: IsEqualTo<T>(ActualValue<T>, T, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), T, String, Object())
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, T, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), T, System.String, System.Object())
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, T, String, Object[])
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), T, String, Object())
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object)
  name: IsEqualTo<T>(ActualValue<T>, Object)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object)
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), Object)
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, System.Object)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), System.Object)
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, Object)
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), Object)
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object,System.String)
  name: IsEqualTo<T>(ActualValue<T>, Object, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object,System.String)
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), Object, String)
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, System.Object, System.String)
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), System.Object, System.String)
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, Object, String)
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), Object, String)
- uid: Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object,System.String,System.Object[])
  name: IsEqualTo<T>(ActualValue<T>, Object, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsEqualTo``1(Testify.ActualValue{``0},System.Object,System.String,System.Object[])
  name.vb: IsEqualTo(Of T)(ActualValue(Of T), Object, String, Object())
  fullName: Testify.StandardAssertions.IsEqualTo<T>(Testify.ActualValue<T>, System.Object, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsEqualTo(Of T)(Testify.ActualValue(Of T), System.Object, System.String, System.Object())
  nameWithType: StandardAssertions.IsEqualTo<T>(ActualValue<T>, Object, String, Object[])
  nameWithType.vb: IsEqualTo(Of T)(ActualValue(Of T), Object, String, Object())
- uid: Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean})
  name: IsFalse(ActualValue<Boolean>)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean})
  name.vb: IsFalse(ActualValue(Of Boolean))
  fullName: Testify.StandardAssertions.IsFalse(Testify.ActualValue<System.Boolean>)
  fullName.vb: Testify.StandardAssertions.IsFalse(Testify.ActualValue(Of System.Boolean))
  nameWithType: StandardAssertions.IsFalse(ActualValue<Boolean>)
  nameWithType.vb: IsFalse(ActualValue(Of Boolean))
- uid: Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean},System.String)
  name: IsFalse(ActualValue<Boolean>, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean},System.String)
  name.vb: IsFalse(ActualValue(Of Boolean), String)
  fullName: Testify.StandardAssertions.IsFalse(Testify.ActualValue<System.Boolean>, System.String)
  fullName.vb: Testify.StandardAssertions.IsFalse(Testify.ActualValue(Of System.Boolean), System.String)
  nameWithType: StandardAssertions.IsFalse(ActualValue<Boolean>, String)
  nameWithType.vb: IsFalse(ActualValue(Of Boolean), String)
- uid: Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean},System.String,System.Object[])
  name: IsFalse(ActualValue<Boolean>, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsFalse(Testify.ActualValue{System.Boolean},System.String,System.Object[])
  name.vb: IsFalse(ActualValue(Of Boolean), String, Object())
  fullName: Testify.StandardAssertions.IsFalse(Testify.ActualValue<System.Boolean>, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsFalse(Testify.ActualValue(Of System.Boolean), System.String, System.Object())
  nameWithType: StandardAssertions.IsFalse(ActualValue<Boolean>, String, Object[])
  nameWithType.vb: IsFalse(ActualValue(Of Boolean), String, Object())
- uid: Testify.StandardAssertions.IsFalse*
  name: IsFalse
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsFalse
  fullName: Testify.StandardAssertions.IsFalse
  nameWithType: StandardAssertions.IsFalse
- uid: Testify.StandardAssertions.IsInstanceOfType*
  name: IsInstanceOfType<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsInstanceOfType
  name.vb: IsInstanceOfType(Of T)
  fullName: Testify.StandardAssertions.IsInstanceOfType<T>
  fullName.vb: Testify.StandardAssertions.IsInstanceOfType(Of T)
  nameWithType: StandardAssertions.IsInstanceOfType<T>
  nameWithType.vb: StandardAssertions.IsInstanceOfType(Of T)
- uid: Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type)
  name: IsInstanceOfType<T>(ActualValue<T>, Type)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type)
  name.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type)
  fullName: Testify.StandardAssertions.IsInstanceOfType<T>(Testify.ActualValue<T>, System.Type)
  fullName.vb: Testify.StandardAssertions.IsInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type)
  nameWithType: StandardAssertions.IsInstanceOfType<T>(ActualValue<T>, Type)
  nameWithType.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type)
- uid: Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name: IsInstanceOfType<T>(ActualValue<T>, Type, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type, String)
  fullName: Testify.StandardAssertions.IsInstanceOfType<T>(Testify.ActualValue<T>, System.Type, System.String)
  fullName.vb: Testify.StandardAssertions.IsInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String)
  nameWithType: StandardAssertions.IsInstanceOfType<T>(ActualValue<T>, Type, String)
  nameWithType.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type, String)
- uid: Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name: IsInstanceOfType<T>(ActualValue<T>, Type, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type, String, Object())
  fullName: Testify.StandardAssertions.IsInstanceOfType<T>(Testify.ActualValue<T>, System.Type, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String, System.Object())
  nameWithType: StandardAssertions.IsInstanceOfType<T>(ActualValue<T>, Type, String, Object[])
  nameWithType.vb: IsInstanceOfType(Of T)(ActualValue(Of T), Type, String, Object())
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double)
  name: IsNotEqualTo(ActualValue<Double>, Double, Double)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double)
  name.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double)
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double)
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Double>, Double, Double)
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double)
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String)
  name: IsNotEqualTo(ActualValue<Double>, Double, Double, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String)
  name.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double, String)
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double, System.String)
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Double>, Double, Double, String)
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double, String)
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String,System.Object[])
  name: IsNotEqualTo(ActualValue<Double>, Double, Double, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Double},System.Double,System.Double,System.String,System.Object[])
  name.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double, String, Object())
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Double>, System.Double, System.Double, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Double), System.Double, System.Double, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Double>, Double, Double, String, Object[])
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Double), Double, Double, String, Object())
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single)
  name: IsNotEqualTo(ActualValue<Single>, Single, Single)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single)
  name.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single)
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single)
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Single>, Single, Single)
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single)
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String)
  name: IsNotEqualTo(ActualValue<Single>, Single, Single, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String)
  name.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single, String)
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single, System.String)
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Single>, Single, Single, String)
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single, String)
- uid: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String,System.Object[])
  name: IsNotEqualTo(ActualValue<Single>, Single, Single, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue{System.Single},System.Single,System.Single,System.String,System.Object[])
  name.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single, String, Object())
  fullName: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue<System.Single>, System.Single, System.Single, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Testify.ActualValue(Of System.Single), System.Single, System.Single, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotEqualTo(ActualValue<Single>, Single, Single, String, Object[])
  nameWithType.vb: IsNotEqualTo(ActualValue(Of Single), Single, Single, String, Object())
- uid: Testify.StandardAssertions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsNotEqualTo
  fullName: Testify.StandardAssertions.IsNotEqualTo
  nameWithType: StandardAssertions.IsNotEqualTo
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0)
  name: IsNotEqualTo<T>(ActualValue<T>, T)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0)
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T)
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, T)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), T)
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, T)
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T)
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0,System.String)
  name: IsNotEqualTo<T>(ActualValue<T>, T, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0,System.String)
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T, String)
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, T, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), T, System.String)
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, T, String)
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T, String)
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name: IsNotEqualTo<T>(ActualValue<T>, T, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T, String, Object())
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, T, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), T, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, T, String, Object[])
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), T, String, Object())
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object)
  name: IsNotEqualTo<T>(ActualValue<T>, Object)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object)
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object)
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, System.Object)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), System.Object)
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, Object)
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object)
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object,System.String)
  name: IsNotEqualTo<T>(ActualValue<T>, Object, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object,System.String)
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object, String)
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, System.Object, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), System.Object, System.String)
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, Object, String)
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object, String)
- uid: Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object,System.String,System.Object[])
  name: IsNotEqualTo<T>(ActualValue<T>, Object, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotEqualTo``1(Testify.ActualValue{``0},System.Object,System.String,System.Object[])
  name.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object, String, Object())
  fullName: Testify.StandardAssertions.IsNotEqualTo<T>(Testify.ActualValue<T>, System.Object, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotEqualTo(Of T)(Testify.ActualValue(Of T), System.Object, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotEqualTo<T>(ActualValue<T>, Object, String, Object[])
  nameWithType.vb: IsNotEqualTo(Of T)(ActualValue(Of T), Object, String, Object())
- uid: Testify.StandardAssertions.IsNotInstanceOfType*
  name: IsNotInstanceOfType<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsNotInstanceOfType
  name.vb: IsNotInstanceOfType(Of T)
  fullName: Testify.StandardAssertions.IsNotInstanceOfType<T>
  fullName.vb: Testify.StandardAssertions.IsNotInstanceOfType(Of T)
  nameWithType: StandardAssertions.IsNotInstanceOfType<T>
  nameWithType.vb: StandardAssertions.IsNotInstanceOfType(Of T)
- uid: Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type)
  name: IsNotInstanceOfType<T>(ActualValue<T>, Type)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type)
  name.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type)
  fullName: Testify.StandardAssertions.IsNotInstanceOfType<T>(Testify.ActualValue<T>, System.Type)
  fullName.vb: Testify.StandardAssertions.IsNotInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type)
  nameWithType: StandardAssertions.IsNotInstanceOfType<T>(ActualValue<T>, Type)
  nameWithType.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type)
- uid: Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name: IsNotInstanceOfType<T>(ActualValue<T>, Type, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String)
  name.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type, String)
  fullName: Testify.StandardAssertions.IsNotInstanceOfType<T>(Testify.ActualValue<T>, System.Type, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String)
  nameWithType: StandardAssertions.IsNotInstanceOfType<T>(ActualValue<T>, Type, String)
  nameWithType.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type, String)
- uid: Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name: IsNotInstanceOfType<T>(ActualValue<T>, Type, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotInstanceOfType``1(Testify.ActualValue{``0},System.Type,System.String,System.Object[])
  name.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type, String, Object())
  fullName: Testify.StandardAssertions.IsNotInstanceOfType<T>(Testify.ActualValue<T>, System.Type, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotInstanceOfType(Of T)(Testify.ActualValue(Of T), System.Type, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotInstanceOfType<T>(ActualValue<T>, Type, String, Object[])
  nameWithType.vb: IsNotInstanceOfType(Of T)(ActualValue(Of T), Type, String, Object())
- uid: Testify.StandardAssertions.IsNotNull*
  name: IsNotNull<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsNotNull
  name.vb: IsNotNull(Of T)
  fullName: Testify.StandardAssertions.IsNotNull<T>
  fullName.vb: Testify.StandardAssertions.IsNotNull(Of T)
  nameWithType: StandardAssertions.IsNotNull<T>
  nameWithType.vb: StandardAssertions.IsNotNull(Of T)
- uid: Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0})
  name: IsNotNull<T>(ActualValue<T>)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0})
  name.vb: IsNotNull(Of T)(ActualValue(Of T))
  fullName: Testify.StandardAssertions.IsNotNull<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.StandardAssertions.IsNotNull(Of T)(Testify.ActualValue(Of T))
  nameWithType: StandardAssertions.IsNotNull<T>(ActualValue<T>)
  nameWithType.vb: IsNotNull(Of T)(ActualValue(Of T))
- uid: Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0},System.String)
  name: IsNotNull<T>(ActualValue<T>, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0},System.String)
  name.vb: IsNotNull(Of T)(ActualValue(Of T), String)
  fullName: Testify.StandardAssertions.IsNotNull<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotNull(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: StandardAssertions.IsNotNull<T>(ActualValue<T>, String)
  nameWithType.vb: IsNotNull(Of T)(ActualValue(Of T), String)
- uid: Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: IsNotNull<T>(ActualValue<T>, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: IsNotNull(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.StandardAssertions.IsNotNull<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotNull(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: StandardAssertions.IsNotNull<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: IsNotNull(Of T)(ActualValue(Of T), String, Object())
- uid: Testify.StandardAssertions.IsNotSameAs*
  name: IsNotSameAs<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsNotSameAs
  name.vb: IsNotSameAs(Of T)
  fullName: Testify.StandardAssertions.IsNotSameAs<T>
  fullName.vb: Testify.StandardAssertions.IsNotSameAs(Of T)
  nameWithType: StandardAssertions.IsNotSameAs<T>
  nameWithType.vb: StandardAssertions.IsNotSameAs(Of T)
- uid: Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0)
  name: IsNotSameAs<T>(ActualValue<T>, T)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0)
  name.vb: IsNotSameAs(Of T)(ActualValue(Of T), T)
  fullName: Testify.StandardAssertions.IsNotSameAs<T>(Testify.ActualValue<T>, T)
  fullName.vb: Testify.StandardAssertions.IsNotSameAs(Of T)(Testify.ActualValue(Of T), T)
  nameWithType: StandardAssertions.IsNotSameAs<T>(ActualValue<T>, T)
  nameWithType.vb: IsNotSameAs(Of T)(ActualValue(Of T), T)
- uid: Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0,System.String)
  name: IsNotSameAs<T>(ActualValue<T>, T, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0,System.String)
  name.vb: IsNotSameAs(Of T)(ActualValue(Of T), T, String)
  fullName: Testify.StandardAssertions.IsNotSameAs<T>(Testify.ActualValue<T>, T, System.String)
  fullName.vb: Testify.StandardAssertions.IsNotSameAs(Of T)(Testify.ActualValue(Of T), T, System.String)
  nameWithType: StandardAssertions.IsNotSameAs<T>(ActualValue<T>, T, String)
  nameWithType.vb: IsNotSameAs(Of T)(ActualValue(Of T), T, String)
- uid: Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name: IsNotSameAs<T>(ActualValue<T>, T, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNotSameAs``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name.vb: IsNotSameAs(Of T)(ActualValue(Of T), T, String, Object())
  fullName: Testify.StandardAssertions.IsNotSameAs<T>(Testify.ActualValue<T>, T, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNotSameAs(Of T)(Testify.ActualValue(Of T), T, System.String, System.Object())
  nameWithType: StandardAssertions.IsNotSameAs<T>(ActualValue<T>, T, String, Object[])
  nameWithType.vb: IsNotSameAs(Of T)(ActualValue(Of T), T, String, Object())
- uid: Testify.StandardAssertions.IsNull*
  name: IsNull<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsNull
  name.vb: IsNull(Of T)
  fullName: Testify.StandardAssertions.IsNull<T>
  fullName.vb: Testify.StandardAssertions.IsNull(Of T)
  nameWithType: StandardAssertions.IsNull<T>
  nameWithType.vb: StandardAssertions.IsNull(Of T)
- uid: Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0})
  name: IsNull<T>(ActualValue<T>)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0})
  name.vb: IsNull(Of T)(ActualValue(Of T))
  fullName: Testify.StandardAssertions.IsNull<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.StandardAssertions.IsNull(Of T)(Testify.ActualValue(Of T))
  nameWithType: StandardAssertions.IsNull<T>(ActualValue<T>)
  nameWithType.vb: IsNull(Of T)(ActualValue(Of T))
- uid: Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0},System.String)
  name: IsNull<T>(ActualValue<T>, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0},System.String)
  name.vb: IsNull(Of T)(ActualValue(Of T), String)
  fullName: Testify.StandardAssertions.IsNull<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.StandardAssertions.IsNull(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: StandardAssertions.IsNull<T>(ActualValue<T>, String)
  nameWithType.vb: IsNull(Of T)(ActualValue(Of T), String)
- uid: Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: IsNull<T>(ActualValue<T>, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsNull``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: IsNull(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.StandardAssertions.IsNull<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsNull(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: StandardAssertions.IsNull<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: IsNull(Of T)(ActualValue(Of T), String, Object())
- uid: Testify.StandardAssertions.IsSameAs*
  name: IsSameAs<T>
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsSameAs
  name.vb: IsSameAs(Of T)
  fullName: Testify.StandardAssertions.IsSameAs<T>
  fullName.vb: Testify.StandardAssertions.IsSameAs(Of T)
  nameWithType: StandardAssertions.IsSameAs<T>
  nameWithType.vb: StandardAssertions.IsSameAs(Of T)
- uid: Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0)
  name: IsSameAs<T>(ActualValue<T>, T)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0)
  name.vb: IsSameAs(Of T)(ActualValue(Of T), T)
  fullName: Testify.StandardAssertions.IsSameAs<T>(Testify.ActualValue<T>, T)
  fullName.vb: Testify.StandardAssertions.IsSameAs(Of T)(Testify.ActualValue(Of T), T)
  nameWithType: StandardAssertions.IsSameAs<T>(ActualValue<T>, T)
  nameWithType.vb: IsSameAs(Of T)(ActualValue(Of T), T)
- uid: Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0,System.String)
  name: IsSameAs<T>(ActualValue<T>, T, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0,System.String)
  name.vb: IsSameAs(Of T)(ActualValue(Of T), T, String)
  fullName: Testify.StandardAssertions.IsSameAs<T>(Testify.ActualValue<T>, T, System.String)
  fullName.vb: Testify.StandardAssertions.IsSameAs(Of T)(Testify.ActualValue(Of T), T, System.String)
  nameWithType: StandardAssertions.IsSameAs<T>(ActualValue<T>, T, String)
  nameWithType.vb: IsSameAs(Of T)(ActualValue(Of T), T, String)
- uid: Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name: IsSameAs<T>(ActualValue<T>, T, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsSameAs``1(Testify.ActualValue{``0},``0,System.String,System.Object[])
  name.vb: IsSameAs(Of T)(ActualValue(Of T), T, String, Object())
  fullName: Testify.StandardAssertions.IsSameAs<T>(Testify.ActualValue<T>, T, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsSameAs(Of T)(Testify.ActualValue(Of T), T, System.String, System.Object())
  nameWithType: StandardAssertions.IsSameAs<T>(ActualValue<T>, T, String, Object[])
  nameWithType.vb: IsSameAs(Of T)(ActualValue(Of T), T, String, Object())
- uid: Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean})
  name: IsTrue(ActualValue<Boolean>)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean})
  name.vb: IsTrue(ActualValue(Of Boolean))
  fullName: Testify.StandardAssertions.IsTrue(Testify.ActualValue<System.Boolean>)
  fullName.vb: Testify.StandardAssertions.IsTrue(Testify.ActualValue(Of System.Boolean))
  nameWithType: StandardAssertions.IsTrue(ActualValue<Boolean>)
  nameWithType.vb: IsTrue(ActualValue(Of Boolean))
- uid: Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean},System.String)
  name: IsTrue(ActualValue<Boolean>, String)
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean},System.String)
  name.vb: IsTrue(ActualValue(Of Boolean), String)
  fullName: Testify.StandardAssertions.IsTrue(Testify.ActualValue<System.Boolean>, System.String)
  fullName.vb: Testify.StandardAssertions.IsTrue(Testify.ActualValue(Of System.Boolean), System.String)
  nameWithType: StandardAssertions.IsTrue(ActualValue<Boolean>, String)
  nameWithType.vb: IsTrue(ActualValue(Of Boolean), String)
- uid: Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean},System.String,System.Object[])
  name: IsTrue(ActualValue<Boolean>, String, Object[])
  href: api/Testify.StandardAssertions.html
  commentId: M:Testify.StandardAssertions.IsTrue(Testify.ActualValue{System.Boolean},System.String,System.Object[])
  name.vb: IsTrue(ActualValue(Of Boolean), String, Object())
  fullName: Testify.StandardAssertions.IsTrue(Testify.ActualValue<System.Boolean>, System.String, System.Object[])
  fullName.vb: Testify.StandardAssertions.IsTrue(Testify.ActualValue(Of System.Boolean), System.String, System.Object())
  nameWithType: StandardAssertions.IsTrue(ActualValue<Boolean>, String, Object[])
  nameWithType.vb: IsTrue(ActualValue(Of Boolean), String, Object())
- uid: Testify.StandardAssertions.IsTrue*
  name: IsTrue
  href: api/Testify.StandardAssertions.html
  commentId: Overload:Testify.StandardAssertions.IsTrue
  fullName: Testify.StandardAssertions.IsTrue
  nameWithType: StandardAssertions.IsTrue
- uid: Testify.StringAssertions
  name: StringAssertions
  href: api/Testify.StringAssertions.html
  commentId: T:Testify.StringAssertions
  fullName: Testify.StringAssertions
  nameWithType: StringAssertions
- uid: Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String)
  name: Contains(ActualValue<String>, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String)
  name.vb: Contains(ActualValue(Of String), String)
  fullName: Testify.StringAssertions.Contains(Testify.ActualValue<System.String>, System.String)
  fullName.vb: Testify.StringAssertions.Contains(Testify.ActualValue(Of System.String), System.String)
  nameWithType: StringAssertions.Contains(ActualValue<String>, String)
  nameWithType.vb: Contains(ActualValue(Of String), String)
- uid: Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String,System.String)
  name: Contains(ActualValue<String>, String, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String,System.String)
  name.vb: Contains(ActualValue(Of String), String, String)
  fullName: Testify.StringAssertions.Contains(Testify.ActualValue<System.String>, System.String, System.String)
  fullName.vb: Testify.StringAssertions.Contains(Testify.ActualValue(Of System.String), System.String, System.String)
  nameWithType: StringAssertions.Contains(ActualValue<String>, String, String)
  nameWithType.vb: Contains(ActualValue(Of String), String, String)
- uid: Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name: Contains(ActualValue<String>, String, String, Object[])
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Contains(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name.vb: Contains(ActualValue(Of String), String, String, Object())
  fullName: Testify.StringAssertions.Contains(Testify.ActualValue<System.String>, System.String, System.String, System.Object[])
  fullName.vb: Testify.StringAssertions.Contains(Testify.ActualValue(Of System.String), System.String, System.String, System.Object())
  nameWithType: StringAssertions.Contains(ActualValue<String>, String, String, Object[])
  nameWithType.vb: Contains(ActualValue(Of String), String, String, Object())
- uid: Testify.StringAssertions.Contains*
  name: Contains
  href: api/Testify.StringAssertions.html
  commentId: Overload:Testify.StringAssertions.Contains
  fullName: Testify.StringAssertions.Contains
  nameWithType: StringAssertions.Contains
- uid: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex)
  name: DoesNotMatch(ActualValue<String>, Regex)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex)
  name.vb: DoesNotMatch(ActualValue(Of String), Regex)
  fullName: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex)
  fullName.vb: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex)
  nameWithType: StringAssertions.DoesNotMatch(ActualValue<String>, Regex)
  nameWithType.vb: DoesNotMatch(ActualValue(Of String), Regex)
- uid: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String)
  name: DoesNotMatch(ActualValue<String>, Regex, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String)
  name.vb: DoesNotMatch(ActualValue(Of String), Regex, String)
  fullName: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex, System.String)
  fullName.vb: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex, System.String)
  nameWithType: StringAssertions.DoesNotMatch(ActualValue<String>, Regex, String)
  nameWithType.vb: DoesNotMatch(ActualValue(Of String), Regex, String)
- uid: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String,System.Object[])
  name: DoesNotMatch(ActualValue<String>, Regex, String, Object[])
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.DoesNotMatch(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String,System.Object[])
  name.vb: DoesNotMatch(ActualValue(Of String), Regex, String, Object())
  fullName: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex, System.String, System.Object[])
  fullName.vb: Testify.StringAssertions.DoesNotMatch(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex, System.String, System.Object())
  nameWithType: StringAssertions.DoesNotMatch(ActualValue<String>, Regex, String, Object[])
  nameWithType.vb: DoesNotMatch(ActualValue(Of String), Regex, String, Object())
- uid: Testify.StringAssertions.DoesNotMatch*
  name: DoesNotMatch
  href: api/Testify.StringAssertions.html
  commentId: Overload:Testify.StringAssertions.DoesNotMatch
  fullName: Testify.StringAssertions.DoesNotMatch
  nameWithType: StringAssertions.DoesNotMatch
- uid: Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String)
  name: EndsWith(ActualValue<String>, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String)
  name.vb: EndsWith(ActualValue(Of String), String)
  fullName: Testify.StringAssertions.EndsWith(Testify.ActualValue<System.String>, System.String)
  fullName.vb: Testify.StringAssertions.EndsWith(Testify.ActualValue(Of System.String), System.String)
  nameWithType: StringAssertions.EndsWith(ActualValue<String>, String)
  nameWithType.vb: EndsWith(ActualValue(Of String), String)
- uid: Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String,System.String)
  name: EndsWith(ActualValue<String>, String, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String,System.String)
  name.vb: EndsWith(ActualValue(Of String), String, String)
  fullName: Testify.StringAssertions.EndsWith(Testify.ActualValue<System.String>, System.String, System.String)
  fullName.vb: Testify.StringAssertions.EndsWith(Testify.ActualValue(Of System.String), System.String, System.String)
  nameWithType: StringAssertions.EndsWith(ActualValue<String>, String, String)
  nameWithType.vb: EndsWith(ActualValue(Of String), String, String)
- uid: Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name: EndsWith(ActualValue<String>, String, String, Object[])
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.EndsWith(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name.vb: EndsWith(ActualValue(Of String), String, String, Object())
  fullName: Testify.StringAssertions.EndsWith(Testify.ActualValue<System.String>, System.String, System.String, System.Object[])
  fullName.vb: Testify.StringAssertions.EndsWith(Testify.ActualValue(Of System.String), System.String, System.String, System.Object())
  nameWithType: StringAssertions.EndsWith(ActualValue<String>, String, String, Object[])
  nameWithType.vb: EndsWith(ActualValue(Of String), String, String, Object())
- uid: Testify.StringAssertions.EndsWith*
  name: EndsWith
  href: api/Testify.StringAssertions.html
  commentId: Overload:Testify.StringAssertions.EndsWith
  fullName: Testify.StringAssertions.EndsWith
  nameWithType: StringAssertions.EndsWith
- uid: Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex)
  name: Matches(ActualValue<String>, Regex)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex)
  name.vb: Matches(ActualValue(Of String), Regex)
  fullName: Testify.StringAssertions.Matches(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex)
  fullName.vb: Testify.StringAssertions.Matches(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex)
  nameWithType: StringAssertions.Matches(ActualValue<String>, Regex)
  nameWithType.vb: Matches(ActualValue(Of String), Regex)
- uid: Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String)
  name: Matches(ActualValue<String>, Regex, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String)
  name.vb: Matches(ActualValue(Of String), Regex, String)
  fullName: Testify.StringAssertions.Matches(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex, System.String)
  fullName.vb: Testify.StringAssertions.Matches(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex, System.String)
  nameWithType: StringAssertions.Matches(ActualValue<String>, Regex, String)
  nameWithType.vb: Matches(ActualValue(Of String), Regex, String)
- uid: Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String,System.Object[])
  name: Matches(ActualValue<String>, Regex, String, Object[])
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.Matches(Testify.ActualValue{System.String},System.Text.RegularExpressions.Regex,System.String,System.Object[])
  name.vb: Matches(ActualValue(Of String), Regex, String, Object())
  fullName: Testify.StringAssertions.Matches(Testify.ActualValue<System.String>, System.Text.RegularExpressions.Regex, System.String, System.Object[])
  fullName.vb: Testify.StringAssertions.Matches(Testify.ActualValue(Of System.String), System.Text.RegularExpressions.Regex, System.String, System.Object())
  nameWithType: StringAssertions.Matches(ActualValue<String>, Regex, String, Object[])
  nameWithType.vb: Matches(ActualValue(Of String), Regex, String, Object())
- uid: Testify.StringAssertions.Matches*
  name: Matches
  href: api/Testify.StringAssertions.html
  commentId: Overload:Testify.StringAssertions.Matches
  fullName: Testify.StringAssertions.Matches
  nameWithType: StringAssertions.Matches
- uid: Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String)
  name: StartsWith(ActualValue<String>, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String)
  name.vb: StartsWith(ActualValue(Of String), String)
  fullName: Testify.StringAssertions.StartsWith(Testify.ActualValue<System.String>, System.String)
  fullName.vb: Testify.StringAssertions.StartsWith(Testify.ActualValue(Of System.String), System.String)
  nameWithType: StringAssertions.StartsWith(ActualValue<String>, String)
  nameWithType.vb: StartsWith(ActualValue(Of String), String)
- uid: Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String,System.String)
  name: StartsWith(ActualValue<String>, String, String)
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String,System.String)
  name.vb: StartsWith(ActualValue(Of String), String, String)
  fullName: Testify.StringAssertions.StartsWith(Testify.ActualValue<System.String>, System.String, System.String)
  fullName.vb: Testify.StringAssertions.StartsWith(Testify.ActualValue(Of System.String), System.String, System.String)
  nameWithType: StringAssertions.StartsWith(ActualValue<String>, String, String)
  nameWithType.vb: StartsWith(ActualValue(Of String), String, String)
- uid: Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name: StartsWith(ActualValue<String>, String, String, Object[])
  href: api/Testify.StringAssertions.html
  commentId: M:Testify.StringAssertions.StartsWith(Testify.ActualValue{System.String},System.String,System.String,System.Object[])
  name.vb: StartsWith(ActualValue(Of String), String, String, Object())
  fullName: Testify.StringAssertions.StartsWith(Testify.ActualValue<System.String>, System.String, System.String, System.Object[])
  fullName.vb: Testify.StringAssertions.StartsWith(Testify.ActualValue(Of System.String), System.String, System.String, System.Object())
  nameWithType: StringAssertions.StartsWith(ActualValue<String>, String, String, Object[])
  nameWithType.vb: StartsWith(ActualValue(Of String), String, String, Object())
- uid: Testify.StringAssertions.StartsWith*
  name: StartsWith
  href: api/Testify.StringAssertions.html
  commentId: Overload:Testify.StringAssertions.StartsWith
  fullName: Testify.StringAssertions.StartsWith
  nameWithType: StringAssertions.StartsWith
- uid: Testify.TaskAssertions
  name: TaskAssertions
  href: api/Testify.TaskAssertions.html
  commentId: T:Testify.TaskAssertions
  fullName: Testify.TaskAssertions
  nameWithType: TaskAssertions
- uid: Testify.TaskAssertions.Completes*
  name: Completes<T>
  href: api/Testify.TaskAssertions.html
  commentId: Overload:Testify.TaskAssertions.Completes
  name.vb: Completes(Of T)
  fullName: Testify.TaskAssertions.Completes<T>
  fullName.vb: Testify.TaskAssertions.Completes(Of T)
  nameWithType: TaskAssertions.Completes<T>
  nameWithType.vb: TaskAssertions.Completes(Of T)
- uid: Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0})
  name: Completes<T>(ActualValue<T>)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0})
  name.vb: Completes(Of T)(ActualValue(Of T))
  fullName: Testify.TaskAssertions.Completes<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.TaskAssertions.Completes(Of T)(Testify.ActualValue(Of T))
  nameWithType: TaskAssertions.Completes<T>(ActualValue<T>)
  nameWithType.vb: Completes(Of T)(ActualValue(Of T))
- uid: Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.Int32)
  name: Completes<T>(ActualValue<T>, Int32)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.Int32)
  name.vb: Completes(Of T)(ActualValue(Of T), Int32)
  fullName: Testify.TaskAssertions.Completes<T>(Testify.ActualValue<T>, System.Int32)
  fullName.vb: Testify.TaskAssertions.Completes(Of T)(Testify.ActualValue(Of T), System.Int32)
  nameWithType: TaskAssertions.Completes<T>(ActualValue<T>, Int32)
  nameWithType.vb: Completes(Of T)(ActualValue(Of T), Int32)
- uid: Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.Int32,System.String,System.Object[])
  name: Completes<T>(ActualValue<T>, Int32, String, Object[])
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.Int32,System.String,System.Object[])
  name.vb: Completes(Of T)(ActualValue(Of T), Int32, String, Object())
  fullName: Testify.TaskAssertions.Completes<T>(Testify.ActualValue<T>, System.Int32, System.String, System.Object[])
  fullName.vb: Testify.TaskAssertions.Completes(Of T)(Testify.ActualValue(Of T), System.Int32, System.String, System.Object())
  nameWithType: TaskAssertions.Completes<T>(ActualValue<T>, Int32, String, Object[])
  nameWithType.vb: Completes(Of T)(ActualValue(Of T), Int32, String, Object())
- uid: Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.String)
  name: Completes<T>(ActualValue<T>, String)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.String)
  name.vb: Completes(Of T)(ActualValue(Of T), String)
  fullName: Testify.TaskAssertions.Completes<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.TaskAssertions.Completes(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: TaskAssertions.Completes<T>(ActualValue<T>, String)
  nameWithType.vb: Completes(Of T)(ActualValue(Of T), String)
- uid: Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: Completes<T>(ActualValue<T>, String, Object[])
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.Completes``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: Completes(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.TaskAssertions.Completes<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.TaskAssertions.Completes(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: TaskAssertions.Completes<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: Completes(Of T)(ActualValue(Of T), String, Object())
- uid: Testify.TaskAssertions.IsBusy*
  name: IsBusy<T>
  href: api/Testify.TaskAssertions.html
  commentId: Overload:Testify.TaskAssertions.IsBusy
  name.vb: IsBusy(Of T)
  fullName: Testify.TaskAssertions.IsBusy<T>
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)
  nameWithType: TaskAssertions.IsBusy<T>
  nameWithType.vb: TaskAssertions.IsBusy(Of T)
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0})
  name: IsBusy<T>(ActualValue<T>)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0})
  name.vb: IsBusy(Of T)(ActualValue(Of T))
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>)
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T))
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>)
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T))
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32)
  name: IsBusy<T>(ActualValue<T>, Int32)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32)
  name.vb: IsBusy(Of T)(ActualValue(Of T), Int32)
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>, System.Int32)
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T), System.Int32)
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>, Int32)
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T), Int32)
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32,System.String)
  name: IsBusy<T>(ActualValue<T>, Int32, String)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32,System.String)
  name.vb: IsBusy(Of T)(ActualValue(Of T), Int32, String)
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>, System.Int32, System.String)
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T), System.Int32, System.String)
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>, Int32, String)
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T), Int32, String)
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32,System.String,System.Object[])
  name: IsBusy<T>(ActualValue<T>, Int32, String, Object[])
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.Int32,System.String,System.Object[])
  name.vb: IsBusy(Of T)(ActualValue(Of T), Int32, String, Object())
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>, System.Int32, System.String, System.Object[])
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T), System.Int32, System.String, System.Object())
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>, Int32, String, Object[])
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T), Int32, String, Object())
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.String)
  name: IsBusy<T>(ActualValue<T>, String)
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.String)
  name.vb: IsBusy(Of T)(ActualValue(Of T), String)
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>, System.String)
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T), System.String)
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>, String)
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T), String)
- uid: Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.String,System.Object[])
  name: IsBusy<T>(ActualValue<T>, String, Object[])
  href: api/Testify.TaskAssertions.html
  commentId: M:Testify.TaskAssertions.IsBusy``1(Testify.ActualValue{``0},System.String,System.Object[])
  name.vb: IsBusy(Of T)(ActualValue(Of T), String, Object())
  fullName: Testify.TaskAssertions.IsBusy<T>(Testify.ActualValue<T>, System.String, System.Object[])
  fullName.vb: Testify.TaskAssertions.IsBusy(Of T)(Testify.ActualValue(Of T), System.String, System.Object())
  nameWithType: TaskAssertions.IsBusy<T>(ActualValue<T>, String, Object[])
  nameWithType.vb: IsBusy(Of T)(ActualValue(Of T), String, Object())
- uid: UsingAnonymousData
  name: Using AnonymousData
  href: manual/UsingAnonymousData.html
- uid: WhyUnitTest
  name: Why Unit Test?
  href: manual/WhyUnitTest.html
